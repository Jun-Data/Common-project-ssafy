Index: Frontend/src/pages/SearchResult/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport DraggableBottomSheet from \"../../components/DraggableBottomSheet/DraggableBottomSheet\";\nimport KakaoMapMarkers from \"../../components/KakaoMapMarkers\";\nimport KakaoMapContainer from \"../../components/KakaoMapContainer\";\nimport { useBaseMap } from \"../../contexts/ KakaoMapContext\";\nimport './style.css'\n\nconst SearchResult = () => {\n    const { isSDKLoaded } = useBaseMap()\n\n    const [storelist, setStorelist] = useState([]);\n\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n\n\n    const coords = {lat: queryParams.get('lat'), lng: queryParams.get('lng')}\n    const itemId = queryParams.get('itemId');\n\n    return (\n        <div className=\"result-page\">\n            <div className=\"resultpagecontents\">\n                <div className=\"resultheader\"><HeaderContainer/></div>\n                <DraggableBottomSheet coords={coords}\n                                   setStorelist={setStorelist}\n                                   itemId={itemId} />\n\n        </div>\n        {/* 지도 루트 컨테이너 (한 페이지에 단 하나만 존재해야 함) */}\n        {/*<div id=\"map-root\" className=\"resultpagemap\" ></div>*/}\n            {isSDKLoaded && (\n                <>\n                    <KakaoMapContainer coords={coords} />\n                    <KakaoMapMarkers storelist={storelist} />\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default SearchResult;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchResult/index.js b/Frontend/src/pages/SearchResult/index.js
--- a/Frontend/src/pages/SearchResult/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/SearchResult/index.js	(date 1739695995542)
@@ -1,5 +1,5 @@
-import { useState } from "react";
-import { useLocation } from "react-router-dom";
+import { useState, useMemo } from "react";
+import { useLocation, useNavigate } from "react-router-dom";
 import HeaderContainer from "../../components/HeaderContainer/HeaderContainer";
 import DraggableBottomSheet from "../../components/DraggableBottomSheet/DraggableBottomSheet";
 import KakaoMapMarkers from "../../components/KakaoMapMarkers";
@@ -9,27 +9,33 @@
 
 const SearchResult = () => {
     const { isSDKLoaded } = useBaseMap()
-
     const [storelist, setStorelist] = useState([]);
-
+    const navigate = useNavigate();
     const location = useLocation();
     const queryParams = new URLSearchParams(location.search);
 
+    // 좌표 객체 메모이제이션
+    const coords = useMemo(() => ({
+        lat: queryParams.get('lat'),
+        lng: queryParams.get('lng')
+    }), [queryParams.get('lat'), queryParams.get('lng')]);
 
-    const coords = {lat: queryParams.get('lat'), lng: queryParams.get('lng')}
     const itemId = queryParams.get('itemId');
+    const itemName = queryParams.get('itemName');
 
     return (
         <div className="result-page">
             <div className="resultpagecontents">
                 <div className="resultheader"><HeaderContainer/></div>
-                <DraggableBottomSheet coords={coords}
-                                   setStorelist={setStorelist}
-                                   itemId={itemId} />
-
-        </div>
-        {/* 지도 루트 컨테이너 (한 페이지에 단 하나만 존재해야 함) */}
-        {/*<div id="map-root" className="resultpagemap" ></div>*/}
+                <div className="resultsearchbar">
+                    <p className="resultsearchinput">{itemName}</p>
+                </div>
+                <DraggableBottomSheet
+                    coords={coords}
+                    setStorelist={setStorelist}
+                    itemId={itemId}
+                />
+            </div>
             {isSDKLoaded && (
                 <>
                     <KakaoMapContainer coords={coords} />
@@ -40,4 +46,4 @@
     )
 }
 
-export default SearchResult;
\ No newline at end of file
+export default SearchResult;
Index: Frontend/src/pages/SearchResult/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.result-page {\n    width: 100%;\n    height: 100%;\n}\n\n.resultpagecontents {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    grid-template-rows: 8vh 6vh 6vh auto auto 6vh;\n    position: relative;\n    z-index: 100;\n}\n\n.resultheader {\n    grid-row: 1;\n    width: 100%;\n}\n\n.resultpagemap {\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchResult/style.css b/Frontend/src/pages/SearchResult/style.css
--- a/Frontend/src/pages/SearchResult/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/SearchResult/style.css	(date 1739695921796)
@@ -1,6 +1,9 @@
 .result-page {
     width: 100%;
     height: 100%;
+    position: fixed;
+    z-index: 100;
+    top: 0;
 }
 
 .resultpagecontents {
@@ -8,7 +11,7 @@
     height: 100%;
     display: grid;
     place-items: center;
-    grid-template-rows: 8vh 6vh 6vh auto auto 6vh;
+    grid-template-rows: 8vh 6vh auto;
     position: relative;
     z-index: 100;
 }
@@ -18,10 +21,26 @@
     width: 100%;
 }
 
-.resultpagemap {
-    width: 100vw;
-    height: 100vh;
-    position: fixed;
-    z-index: 1;
-    top: 0;
-}
\ No newline at end of file
+.resultsearchbar {
+    box-sizing: border-box;
+    border: 2px solid #3f72af;
+    grid-row: 2;
+    width: 100%;
+    height: 100%;
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+}
+
+
+.resultsearchinput {
+    box-sizing: inherit;
+    width: 100%;
+    height: 100%;
+    background-color: white;
+    text-align: left;
+    white-space: nowrap;
+    text-overflow: ellipsis;
+    align-content: center;
+    padding-left: 40px;
+}
Index: Frontend/src/pages/Search/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.searchpage {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    grid-template-rows: 8vh 6vh auto auto;\n}\n\n\n.searchpageheader {\n    grid-row: 1;\n    width: 100%;\n}\n\n.searchpagesearchbar {\n    position: relative;\n    grid-row: 2;\n    width: 100%;\n    z-index: 100;\n}\n\n.searchpagedropdown {\n    position: fixed;\n    z-index: 101;\n    width: 100%;\n    top: 118px;\n    left: 0;\n}\n\n.searchpagerecommend {\n    grid-row: 3;\n}\n\n.searchpagenavbar {\n    grid-row: 4;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/Search/style.css b/Frontend/src/pages/Search/style.css
--- a/Frontend/src/pages/Search/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/Search/style.css	(date 1739693644631)
@@ -1,14 +1,17 @@
 .searchpage {
     width: 100%;
-    height: 100%;
+    height: 100vh;
     display: grid;
-    grid-template-rows: 8vh 6vh auto auto;
+    grid-template-rows: 8vh 6vh 6vh auto;
 }
+
 
 
 .searchpageheader {
     grid-row: 1;
     width: 100%;
+    position: relative;
+    z-index: 200;
 }
 
 .searchpagesearchbar {
@@ -19,17 +22,16 @@
 }
 
 .searchpagedropdown {
+    box-sizing: border-box;
     position: fixed;
     z-index: 101;
     width: 100%;
-    top: 118px;
-    left: 0;
 }
 
 .searchpagerecommend {
+    grid-row: 4;
+}
+
+.searchpagenavbar {
     grid-row: 3;
-}
-
-.searchpagenavbar {
-    grid-row: 4;
 }
\ No newline at end of file
Index: Frontend/src/components/SearchBar/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\nimport { useNavigate, useLocation,  useMatch } from \"react-router-dom\";\nimport './style.css'\n\nconst SearchBar = ({ coords, setQuery }) => {\n    const [localQuery, setLocalQuery] = useState(\"\"); // 로컬 상태로 입력값 관리\n    const navigate = useNavigate();\n\n    const isStoreDetailPage = useMatch('/storedetail/*');\n    const isSearchPage = useLocation().pathname === '/search';\n\n    const handleSearch = () => {\n        if (coords) {\n            navigate(`/search?lat=${coords.lat}&lng=${coords.lng}`);\n        }\n    }\n\n\n    // 검색어 입력 처리\n    const handleInputChange = (e) => {\n        setLocalQuery(e.target.value);\n        setQuery(e.target.value);\n    };\n\n\n    return (\n        <div className=\"searchbar\">\n            {(isSearchPage || isStoreDetailPage) && (\n                <input\n                    type=\"text\"\n                    className=\"search-input-searchpage\"\n                    placeholder=\"검색어를 입력하세요\"\n                    value={localQuery}\n                    onChange={handleInputChange}\n                />\n            )}\n            {!isSearchPage && !isStoreDetailPage && (\n                <input\n                    type=\"text\"\n                    className=\"search-input-mainpage\"\n                    placeholder=\"제품 이름으로 검색해보세요!\"\n                    onClick={handleSearch}\n                />\n            )}\n        </div>\n    )\n};\n\nexport default SearchBar;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/SearchBar/index.js b/Frontend/src/components/SearchBar/index.js
--- a/Frontend/src/components/SearchBar/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/SearchBar/index.js	(date 1739688097718)
@@ -1,11 +1,11 @@
+// SearchBar.jsx (컴포넌트)
 import React, { useState } from "react";
-import { useNavigate, useLocation,  useMatch } from "react-router-dom";
-import './style.css'
+import { useNavigate, useLocation, useMatch } from "react-router-dom";
+import './style.css';
 
-const SearchBar = ({ coords, setQuery }) => {
-    const [localQuery, setLocalQuery] = useState(""); // 로컬 상태로 입력값 관리
+const SearchBar = ({ coords, setQuery, onClear }) => {
+    const [localQuery, setLocalQuery] = useState("");
     const navigate = useNavigate();
-
     const isStoreDetailPage = useMatch('/storedetail/*');
     const isSearchPage = useLocation().pathname === '/search';
 
@@ -13,26 +13,36 @@
         if (coords) {
             navigate(`/search?lat=${coords.lat}&lng=${coords.lng}`);
         }
-    }
+    };
 
-
-    // 검색어 입력 처리
     const handleInputChange = (e) => {
         setLocalQuery(e.target.value);
         setQuery(e.target.value);
     };
 
+    const handleClear = () => {
+        onClear();
+        setLocalQuery("");
+    }
 
     return (
         <div className="searchbar">
             {(isSearchPage || isStoreDetailPage) && (
-                <input
-                    type="text"
-                    className="search-input-searchpage"
-                    placeholder="검색어를 입력하세요"
-                    value={localQuery}
-                    onChange={handleInputChange}
-                />
+                <div className="search-input-container">
+                    <input
+                        type="text"
+                        className="search-input-searchpage"
+                        placeholder="검색어를 입력하세요"
+                        value={localQuery}
+                        onChange={handleInputChange}
+                    />
+                    <button
+                    className="clear-button"
+                        onClick={handleClear}
+                        aria-label="검색어 지우기">
+                            ×
+                        </button>
+                </div>
             )}
             {!isSearchPage && !isStoreDetailPage && (
                 <input
@@ -43,7 +53,7 @@
                 />
             )}
         </div>
-    )
+    );
 };
 
 export default SearchBar;
Index: Frontend/src/components/SearchBar/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.searchbar {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    z-index: 99;\n}\n\n/* 검색 입력창 스타일 */\n.search-input-searchpage {\n    box-sizing: border-box;\n    width: 100%; /* 가로 비율 설정 */\n    height: 100%; /* 부모 높이에 맞춤 */\n    font-size: 16px;\n    border: 2px solid #3f72af;\n    outline: none;\n    padding-left: 10px; /* 입력창 내부 여백 */\n}\n\n\n\n.search-input-mainpage {\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-size: 16px;\n    border: 2px solid #3f72af;\n    outline: none;\n    background-color: white;\n    box-sizing: border-box;\n    padding-left: 40px; /* 버튼과의 간격 확보 */\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/SearchBar/style.css b/Frontend/src/components/SearchBar/style.css
--- a/Frontend/src/components/SearchBar/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/SearchBar/style.css	(date 1739695842821)
@@ -1,26 +1,41 @@
 .searchbar {
     width: 100%;
     height: 100%;
-    margin: 0;
-    padding: 0;
     display: flex;
     align-content: center;
     justify-content: center;
     z-index: 99;
 }
 
+.search-input-container {
+    box-sizing: border-box;
+    width: 100%;
+    height: 100%;
+    border: 2px solid #3f72af;
+    outline: none;
+    display: flex;
+    justify-content: space-between;
+
+}
+
 /* 검색 입력창 스타일 */
 .search-input-searchpage {
-    box-sizing: border-box;
-    width: 100%; /* 가로 비율 설정 */
-    height: 100%; /* 부모 높이에 맞춤 */
+    box-sizing: inherit;
+    width: 85%; /* 가로 비율 설정 */
     font-size: 16px;
-    border: 2px solid #3f72af;
-    outline: none;
-    padding-left: 10px; /* 입력창 내부 여백 */
+    padding-left: 40px; /* 입력창 내부 여백 */
+    border: none;
 }
 
+.search-input-searchpage:focus {
+    outline: none; /* 기본 브라우저 아웃라인 제거 */
+}
 
+.clear-button {
+    box-sizing: inherit;
+    width: 15%;
+    height: 100%;
+}
 
 .search-input-mainpage {
     box-sizing: border-box;
Index: Frontend/src/api/RecommendApi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import apiClient from \"./apiClient\";\n\nconst RecommendApi = async (userId) => {\n    try {\n        const response = await apiClient.get(`/api/recommend/user/${userId}`);\n        if (response.status === 200) {\n            console.log(\"API 호출 성공:\", response.data);\n            return response.data; // 추천 리스트 반환\n        } else {\n            console.error(\"API 요청 실패:\", response.message || \"알 수 없는 오류\");\n            throw new Error(response.message || \"API 요청 실패\");\n        }\n    } catch (error) {\n        console.error(\"API 호출 중 오류 발생:\", error);\n        throw error;\n    }\n};\n\nexport default RecommendApi;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/api/RecommendApi.js b/Frontend/src/api/RecommendApi.js
--- a/Frontend/src/api/RecommendApi.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/api/RecommendApi.js	(date 1739683477405)
@@ -1,19 +1,19 @@
 import apiClient from "./apiClient";
 
-const RecommendApi = async (userId) => {
+const RecommendApi = async (userNo) => {
     try {
-        const response = await apiClient.get(`/api/recommend/user/${userId}`);
+        // ✅ 경로 파라미터 방식으로 변경
+        const response = await apiClient.get(`/api/recommend/user/${userNo}?limit=5`);
+
         if (response.status === 200) {
-            console.log("API 호출 성공:", response.data);
-            return response.data; // 추천 리스트 반환
-        } else {
-            console.error("API 요청 실패:", response.message || "알 수 없는 오류");
-            throw new Error(response.message || "API 요청 실패");
+            return response.data;
         }
+        throw new Error(response.message || "추천 데이터 요청 실패");
     } catch (error) {
-        console.error("API 호출 중 오류 발생:", error);
+        console.error("API Error:", error);
         throw error;
     }
 };
 
-export default RecommendApi;
+export default RecommendApi
+
Index: Frontend/src/App.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.App {\n    width: 100%;\n    height: 100vh;\n    padding: 0;\n    margin: 0;\n    text-align: center;\n  }\n\n.map-container {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    z-index: 1;\n}\n\n.map-container.visible {\n    display: block;\n    pointer-events: auto;\n}\n\n.map-container.hidden {\n    display: none;\n    pointer-events: none\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/App.css b/Frontend/src/App.css
--- a/Frontend/src/App.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/App.css	(date 1739692946490)
@@ -20,5 +20,4 @@
 
 .map-container.hidden {
     display: none;
-    pointer-events: none
 }
\ No newline at end of file
Index: Frontend/src/pages/MainPage/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.mainpagebackground {\n    width: 100%;\n    height: 100%;\n}\n\n.mainpagecontents {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    grid-template-rows: 8vh 6vh 6vh auto;\n    position: relative;\n    z-index: 100;\n}\n\n.mainpageheader {\n    grid-row: 1;\n    width: 100%;\n}\n\n.mainpagecurrentaddress {\n    box-sizing: border-box;\n    grid-row: 3;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n    background-color: white;\n    border: 1px solid #4a90e2;\n    align-items: center;\n    position: relative;\n    z-index: 99;\n}\n\n.mainpageaddressdetail {\n    width: 70%;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n\n.mainpagesearchbar {\n    grid-row: 2;\n    position: relative;\n    z-index: 99;\n    width: 100%;\n    height: 100%;\n}\n\n\n.addressSearchButton {\n    width: 15%;\n    height: 100%;\n    font-size: 12px;\n}\n\n.mainpagemap {\n    position: fixed;\n    z-index: 1;\n    top: 0;\n}\n\n.mainpagemarker {\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n    top: 0;\n    z-index: 10;\n    pointer-events: none;\n\n}\n\n.mainpagebottomsheet {\n    width: 100%;\n    position: fixed;\n    bottom: 0 !important;\n    z-index: 101;\n}\n\n/* style.css */\n.mainpagemap {\n    position: fixed;\n    top: 0;\n    z-index: 1;\n    width: 100vw;\n    height: 100vh;\n}\n\n.base-map-container {\n    position: absolute;\n    z-index: 0;\n    width: 100%;\n    height: 100%;\n}\n\n.marker-layer {\n    position: absolute;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    pointer-events: none; /* 마커 클릭 이벤트 정상 작동을 위해 */\n}\n\n.marker-layer > div {\n    pointer-events: auto; /* 마커 영역만 이벤트 허용 */\n}\n\n.mainpageaddressimg {\n    width: 15% ;\n    height: 100% ;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/MainPage/style.css b/Frontend/src/pages/MainPage/style.css
--- a/Frontend/src/pages/MainPage/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/MainPage/style.css	(date 1739695480512)
@@ -26,14 +26,18 @@
     width: 100%;
     height: 100%;
     background-color: white;
-    border: 1px solid #4a90e2;
+    border-right: 2px solid #4a90e2;
+    border-bottom: 2px solid #4a90e2;
+    border-left: 2px solid #4a90e2;
+    border-top: none;  /* 상단 테두리 제거 */
     align-items: center;
     position: relative;
     z-index: 99;
 }
 
 .mainpageaddressdetail {
-    width: 70%;
+    box-sizing: inherit;
+    width: 65%;
     text-align: left;
     overflow: hidden;
     white-space: nowrap;
@@ -48,29 +52,13 @@
     height: 100%;
 }
 
-
 .addressSearchButton {
-    width: 15%;
+    box-sizing: inherit;
+    width: 20%;
     height: 100%;
     font-size: 12px;
 }
 
-.mainpagemap {
-    position: fixed;
-    z-index: 1;
-    top: 0;
-}
-
-.mainpagemarker {
-    width: 100vw;
-    height: 100vh;
-    position: fixed;
-    top: 0;
-    z-index: 10;
-    pointer-events: none;
-
-}
-
 .mainpagebottomsheet {
     width: 100%;
     position: fixed;
@@ -78,34 +66,6 @@
     z-index: 101;
 }
 
-/* style.css */
-.mainpagemap {
-    position: fixed;
-    top: 0;
-    z-index: 1;
-    width: 100vw;
-    height: 100vh;
-}
-
-.base-map-container {
-    position: absolute;
-    z-index: 0;
-    width: 100%;
-    height: 100%;
-}
-
-.marker-layer {
-    position: absolute;
-    z-index: 1;
-    width: 100%;
-    height: 100%;
-    pointer-events: none; /* 마커 클릭 이벤트 정상 작동을 위해 */
-}
-
-.marker-layer > div {
-    pointer-events: auto; /* 마커 영역만 이벤트 허용 */
-}
-
 .mainpageaddressimg {
     width: 15% ;
     height: 100% ;
Index: Frontend/src/components/SearchNutritionScroll/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.css'\n\n\nconst SearchNutritionScroll = () => {\n    const apiUrl = process.env.REACT_APP_BACKEND_API_URL;\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n\n    const lat = queryParams.get('lat');\n    const lng = queryParams.get('lng');\n\n\n    // 상태 관리\n    const [maxSugar, setMaxSugar] = useState(100);\n    const [maxCal, setMaxCal] = useState(500);\n    const [items, setItems] = useState([]);\n    const [error, setError] = useState(null);\n\n    // API 호출 함수\n    const fetchItems = async (maxSugar, maxCal) => {\n        try {\n            const response = await axios.get(`${apiUrl}/api/items/search`, {\n                params: {\n                    minSugar: 0, // 항상 0으로 고정\n                    maxSugar,\n                    minCal: 0, // 항상 0으로 고정\n                    maxCal,\n                },\n            });\n            setItems(response.data); // 받아온 데이터를 상태에 저장\n        } catch (err) {\n            console.error('API 호출 중 오류 발생:', err);\n            setError('데이터를 불러오는 중 오류가 발생했습니다.');\n        }\n    };\n\n    // 값이 변경될 때마다 API 호출\n    useEffect(() => {\n        fetchItems(maxSugar, maxCal);\n    }, [maxSugar, maxCal]);\n\n    console.log(items);\n\n    return (\n        <div className=\"scrollcontents\">\n            <div className=\"scrollnotice\">영양분으로 검색하기</div>\n            <div className=\"scrollui\">\n                <label>\n                    Sugar (Max): {maxSugar}&nbsp;&nbsp;&nbsp;\n                    <input\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"100\"\n                        value={maxSugar}\n                        onChange={(e) => setMaxSugar(Number(e.target.value))}\n                    />\n                </label><br/>\n                <label>\n                    Calories (Max): {maxCal}\n                    <input\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"500\"\n                        value={maxCal}\n                        onChange={(e) => setMaxCal(Number(e.target.value))}\n                    />\n                </label><br/>\n            </div>\n\n            <div className=\"nutritionsearchresult\">\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n                {!error && items.length === 0 && <p>데이터가 없습니다.</p>}\n                {!error && items.length > 0 && (\n                    <ul className=\"nutritionul\">\n                        {items.map((item) => (\n                            <li\n                                className=\"nutritionli\"\n                                key={item.itemId}\n                                onClick={() =>\n                                    navigate(\n                                        `search/results?lat=${lat}&lng=${lng}&itemId=${item.itemId}`\n                                    )\n                                }\n                            >\n                                <img\n                                    src={item.itemImageUrl} // 이미지 URL\n                                    alt={item.itemName}\n                                    className=\"nutrition-image\"\n                                />\n                                <span className=\"nutrition-text\">{item.itemName}</span>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchNutritionScroll;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/SearchNutritionScroll/index.js b/Frontend/src/components/SearchNutritionScroll/index.js
--- a/Frontend/src/components/SearchNutritionScroll/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/SearchNutritionScroll/index.js	(date 1739695195641)
@@ -4,16 +4,10 @@
 import './style.css'
 
 
-const SearchNutritionScroll = () => {
+const SearchNutritionScroll = ({ coords }) => {
     const apiUrl = process.env.REACT_APP_BACKEND_API_URL;
 
     const navigate = useNavigate();
-    const location = useLocation();
-    const queryParams = new URLSearchParams(location.search);
-
-    const lat = queryParams.get('lat');
-    const lng = queryParams.get('lng');
-
 
     // 상태 관리
     const [maxSugar, setMaxSugar] = useState(100);
@@ -21,6 +15,7 @@
     const [items, setItems] = useState([]);
     const [error, setError] = useState(null);
 
+    console.log(coords)
     // API 호출 함수
     const fetchItems = async (maxSugar, maxCal) => {
         try {
@@ -44,8 +39,6 @@
         fetchItems(maxSugar, maxCal);
     }, [maxSugar, maxCal]);
 
-    console.log(items);
-
     return (
         <div className="scrollcontents">
             <div className="scrollnotice">영양분으로 검색하기</div>
@@ -83,7 +76,7 @@
                                 key={item.itemId}
                                 onClick={() =>
                                     navigate(
-                                        `search/results?lat=${lat}&lng=${lng}&itemId=${item.itemId}`
+                                        `/search/results?lat=${coords.lat}&lng=${coords.lng}&itemId=${item.itemId}&itemName=${item.itemName}`
                                     )
                                 }
                             >
Index: Frontend/src/pages/SearchbyNurtrition/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport SearchNutritionScroll from \"../../components/SearchNutritionScroll\";\nimport './style.css'\n\nconst SearchbyNurtrition = () => {\n    return (\n    <div className=\"searchbynurtritioncontents\">\n        <div className=\"nutritionheader\"><HeaderContainer/></div>\n        <div className=\"nutritionScroll\"><SearchNutritionScroll/></div>\n    </div>\n)\n}\n\nexport default SearchbyNurtrition
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchbyNurtrition/index.js b/Frontend/src/pages/SearchbyNurtrition/index.js
--- a/Frontend/src/pages/SearchbyNurtrition/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/SearchbyNurtrition/index.js	(date 1739688573601)
@@ -1,12 +1,20 @@
+import { useLocation } from "react-router-dom";
 import HeaderContainer from "../../components/HeaderContainer/HeaderContainer";
 import SearchNutritionScroll from "../../components/SearchNutritionScroll";
 import './style.css'
 
 const SearchbyNurtrition = () => {
+
+    const location = useLocation();
+    const queryParams = new URLSearchParams(location.search);
+
+    const coords = {lat: queryParams.get('lat'), lng: queryParams.get('lng')}
+
+
     return (
     <div className="searchbynurtritioncontents">
         <div className="nutritionheader"><HeaderContainer/></div>
-        <div className="nutritionScroll"><SearchNutritionScroll/></div>
+        <div className="nutritionScroll"><SearchNutritionScroll coords={coords}/></div>
     </div>
 )
 }
Index: Frontend/src/pages/SearchbyNurtrition/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.searchbynurtritioncontents {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    grid-template-rows: 8vh 92vh;\n}\n\n.nutritionheader {\n    grid-row: 1;\n}\n\n.nutritionScroll {\n    grid-row: 2;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchbyNurtrition/style.css b/Frontend/src/pages/SearchbyNurtrition/style.css
--- a/Frontend/src/pages/SearchbyNurtrition/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/SearchbyNurtrition/style.css	(date 1739693827154)
@@ -7,6 +7,8 @@
 
 .nutritionheader {
     grid-row: 1;
+    position: relative;
+    z-index: 200;
 }
 
 .nutritionScroll {
Index: Frontend/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Route, Routes, useLocation } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport Kiosk from \"./pages/Kiosk\"\nimport KioskMainScreen from \"./pages/KioskMain\";\nimport SignUp from \"./pages/SignUpPage/SignUp\";\nimport OwnerSignUp from \"./pages/SignUpPage/OwnerSignUp\";\nimport UserSignUp from \"./pages/SignUpPage/UserSignUp\";\nimport MyPage from \"./pages/MyPage\";\nimport Coupons from \"./pages/Coupons\";\nimport Chats from \"./pages/Chats\";\nimport KakaoRedirect from \"./pages/KakaoRedirect\";\nimport SearchPage from \"./pages/Search\";\nimport StoreDetail from \"./pages/Storedetail\"\nimport MakeCoupons from \"./pages/MakeCoupons\";\nimport Notice from \"./pages/Notice\";\nimport StockRequests from \"./pages/StockRequests\";\nimport FleaRequests from \"./pages/FleaRequests\";\nimport SearchbyNurtrition from \"./pages/SearchbyNurtrition\";\nimport SearchResult from \"./pages/SearchResult\";\nimport StoredetailRequestPopup from \"./pages/StoredetailRequest\";\nimport StoreDetailFlearequest from \"./pages/StoredetailFlearequest\";\nimport {KakaoMapProvider} from \"./contexts/ KakaoMapContext\";\n\n\nfunction App() {\n\n  const location = useLocation();\n  const isMapPage = ['/', '/search/results'].includes(location.pathname);\n\n  function setScreenSize() {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n  }\n  useEffect(() => {\n    setScreenSize();\n  });\n\n\n  return (\n    <div className=\"App\">\n      <div>\n      <KakaoMapProvider>\n        <Routes>\n\n          <Route path=\"/signup\" element={<SignUp/>}/>\n          <Route path=\"/owner-signup\" element={<OwnerSignUp/>}/>\n          <Route path=\"/user-signup\" element={<UserSignUp/>}/>\n          <Route path=\"/mypage/user\" element={<MyPage/>}/>\n          <Route path=\"/mypage/user/coupons\" element={<Coupons/>}/>\n          <Route path=\"/mypage/user/chats\" element={<Chats/>}/>\n          <Route path=\"/mypage/admin\" element={<MyPage/>}/>\n          <Route path=\"/mypage/admin/flea\" element={<FleaRequests/>}/>\n          <Route path=\"/mypage/admin/stock\" element={<StockRequests/>}/>\n          <Route path=\"/mypage/admin/coupon\" element={<MakeCoupons/>}/>\n          <Route path=\"/mypage/admin/notice\" element={<Notice/>}/>\n\n          <Route path=\"/oauth/kakao\" element={<KakaoRedirect />} />\n\n          <Route path=\"/kiosk\" element={<Kiosk/>}/>\n          <Route path=\"/kiosk/main\" element={<KioskMainScreen/>}/>\n          {/*<Route path=\"/kiosk/:storeNo\" element={<KioskMainScreen/>}/>*/}\n\n          <Route path=\"/\" element={<MainPage />}/>\n          <Route path=\"/search/results\" element={<SearchResult/>}/>\n          <Route path=\"/search\" element={<SearchPage/>}/>\n          <Route path=\"/storedetail/:storeNo\" element={<StoreDetail/>}/>\n          <Route path=\"/storedetail/:storeNo/request\" element={<StoredetailRequestPopup/>}/>\n          <Route path=\"/storedetail/:storeNo/flearequest\" element={<StoreDetailFlearequest/>}/>\n          <Route path=\"/searchbynutrition\" element={<SearchbyNurtrition/>}/>\n\n      </Routes>\n    </KakaoMapProvider>\n    </div>\n      <div\n          id=\"map-root\"\n          className={`map-container ${isMapPage ? 'visible' : 'hidden'}`}\n      />\n  </div>\n  );\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/App.js b/Frontend/src/App.js
--- a/Frontend/src/App.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/App.js	(date 1739692888591)
@@ -1,6 +1,6 @@
 import "./App.css";
 import { useEffect } from "react";
-import { Route, Routes, useLocation } from "react-router-dom";
+import { Route, Routes, useLocation, useParams } from "react-router-dom";
 import MainPage from "./pages/MainPage";
 import Kiosk from "./pages/Kiosk"
 import KioskMainScreen from "./pages/KioskMain";
@@ -21,29 +21,39 @@
 import SearchResult from "./pages/SearchResult";
 import StoredetailRequestPopup from "./pages/StoredetailRequest";
 import StoreDetailFlearequest from "./pages/StoredetailFlearequest";
-import {KakaoMapProvider} from "./contexts/ KakaoMapContext";
+import { KakaoMapProvider } from "./contexts/ KakaoMapContext";
 
 
 function App() {
 
   const location = useLocation();
+  const params = useParams();
+
+  // 검색 결과[9] 참조: 동적 라우트 키 생성
+  const routeKey = location.pathname.startsWith('/search/results')
+      ? `search-${location.search}`
+      : location.pathname;
+
+  // 지도 페이지 판별 로직
   const isMapPage = ['/', '/search/results'].includes(location.pathname);
 
-  function setScreenSize() {
-    let vh = window.innerHeight * 0.01;
-    document.documentElement.style.setProperty("--vh", `${vh}px`);
-  }
-  useEffect(() => {
+
+  // 뷰포트 높이 설정 (검색 결과[5] 참조)
+  useEffect(() => {
+    const setScreenSize = () => {
+      let vh = window.innerHeight * 0.01;
+      document.documentElement.style.setProperty("--vh", `${vh}px`);
+    };
     setScreenSize();
-  });
-
+    window.addEventListener('resize', setScreenSize);
+    return () => window.removeEventListener('resize', setScreenSize);
+  }, []);
 
   return (
     <div className="App">
       <div>
       <KakaoMapProvider>
         <Routes>
-
           <Route path="/signup" element={<SignUp/>}/>
           <Route path="/owner-signup" element={<OwnerSignUp/>}/>
           <Route path="/user-signup" element={<UserSignUp/>}/>
@@ -63,21 +73,26 @@
           {/*<Route path="/kiosk/:storeNo" element={<KioskMainScreen/>}/>*/}
 
           <Route path="/" element={<MainPage />}/>
-          <Route path="/search/results" element={<SearchResult/>}/>
+          <Route path="/search/results" element={<SearchResult key={location.key}/>}/>
           <Route path="/search" element={<SearchPage/>}/>
           <Route path="/storedetail/:storeNo" element={<StoreDetail/>}/>
           <Route path="/storedetail/:storeNo/request" element={<StoredetailRequestPopup/>}/>
           <Route path="/storedetail/:storeNo/flearequest" element={<StoreDetailFlearequest/>}/>
           <Route path="/searchbynutrition" element={<SearchbyNurtrition/>}/>
-
-      </Routes>
-    </KakaoMapProvider>
-    </div>
+        </Routes>
+      </KakaoMapProvider>
+        </div>
       <div
           id="map-root"
           className={`map-container ${isMapPage ? 'visible' : 'hidden'}`}
-      />
-  </div>
+          style={{
+            opacity: isMapPage ? 1 : 0,
+            visibility: isMapPage ? 'visible' : 'hidden',
+            transition: 'opacity 0.3s ease, visibility 0.3s ease'
+          }}
+      ></div>
+
+    </div>
   );
 }
 
Index: Frontend/src/components/KakaoMapContainer/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useEffect, useRef } from 'react';\nimport { useBaseMap } from \"../../contexts/ KakaoMapContext\";\n\nconst KakaoMapContainer = ({ coords }) => {\n    const { baseMap, isSDKLoaded } = useBaseMap();\n    const markerRef = useRef(null); // 마커 인스턴스 추적용 ref\n\n    useEffect(() => {\n        if (!isSDKLoaded || !baseMap || !coords) return;\n\n        // 1. 기존 마커 제거\n        if (markerRef.current) {\n            markerRef.current.setMap(null);\n        }\n\n        // 2. 새 마커 생성\n        const markerImage = new window.kakao.maps.MarkerImage(\n            '/mylocation.png',\n            new window.kakao.maps.Size(40, 40),\n            { offset: new window.kakao.maps.Point(20, 0) }\n        );\n\n        const newMarker = new window.kakao.maps.Marker({\n            position: new window.kakao.maps.LatLng(coords.lat, coords.lng),\n            image: markerImage,\n            map: baseMap,\n            clickable: true,\n        });\n\n        // 3. 마커 참조 업데이트\n        markerRef.current = newMarker;\n\n        const iwContent = `\n          <div style=\"\n            width: 100px;\n            padding: 15px;\n            text-align: center;\n            font-size: 14px;\n            color: #333;\n            position: relative;\n          \">\n            \uD83D\uDCCD 내 위치\n            <div style=\"\n              position: absolute;\n              width: 0;\n              height: 0;\n            \"></div>\n          </div>\n        `;\n\n        const infowindow = new window.kakao.maps.InfoWindow({\n            content: iwContent,\n            removable: true,\n        });\n\n        // 클릭 이벤트 핸들러\n        window.kakao.maps.event.addListener(newMarker, 'click', () => {\n            infowindow.open(baseMap, newMarker);\n        });\n\n        // 4. 지도 중심 이동\n        const position = new window.kakao.maps.LatLng(coords.lat, coords.lng);\n        baseMap.setCenter(position);\n\n\n        // 클린업 함수\n        return () => {\n            if (markerRef.current) {\n                markerRef.current.setMap(null);\n            }\n        };\n    }, [coords, baseMap, isSDKLoaded]); // coords 변경 시 재실행\n\n\n    return null;\n};\n\nexport default KakaoMapContainer;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/KakaoMapContainer/index.js b/Frontend/src/components/KakaoMapContainer/index.js
--- a/Frontend/src/components/KakaoMapContainer/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/KakaoMapContainer/index.js	(date 1739670807483)
@@ -1,5 +1,7 @@
 import { useEffect, useRef } from 'react';
 import { useBaseMap } from "../../contexts/ KakaoMapContext";
+import './style.css'
+
 
 const KakaoMapContainer = ({ coords }) => {
     const { baseMap, isSDKLoaded } = useBaseMap();
@@ -56,6 +58,7 @@
         // 클릭 이벤트 핸들러
         window.kakao.maps.event.addListener(newMarker, 'click', () => {
             infowindow.open(baseMap, newMarker);
+            baseMap.setCenter(newMarker)
         });
 
         // 4. 지도 중심 이동
Index: Frontend/src/components/HeaderContainer/HeaderContainer.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.header {\n    height: 8vh;\n    max-width: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    background-color: #ebf0fa;\n    color: white;\n    display: flex;  /* 가로 정렬 */\n    justify-content: space-between; /* 좌우 배치 */\n    align-items: center;  /* 세로 중앙 정렬 */\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    position: sticky;\n    z-index: 100; /* 다른 요소 위에 나타나도록 높은 z-index 값을 설정 */\n    padding: 0 20px; /* 좌우에 20px의 공백 추가 */\n\n}\n\n\n.link {\n    text-decoration: none;\n    text-align: center;\n}\n\n.title {\n    font-size: 20px;\n    color: black;\n    font-weight: bold;\n}\n\n.login,\n.bell {\n    align-items: center;\n    color: black;\n    font-size: 20px;\n    color: rgba(0, 0, 0, 0.623);\n}\n\n.active-login-icon,\n.active-bell-icon {\n    color: black;\n}\n\n\n.logo {\n    width: 100px; /* 원하는 크기로 조정 */\n    height: auto;\n}\n\n.icons {\n    display: flex;    /* 아이콘을 가로 정렬 */\n    align-items: center; /* 세로 중앙 정렬 */\n    gap: 30px;      /* 아이콘 간격 조정 */\n}\n/* 드롭다운 메뉴 */\n.dropdown {\n    position: fixed;\n    top: 8%; /* 버튼 바로 아래에 드롭다운 위치 */\n    right: 10px;\n    width: 140px; /* 드롭다운의 너비 */\n    padding: 10px;\n    background-color: #ffffff; /* 배경색 */\n    border: 1px solid #ddd; /* 테두리 색상 */\n    border-radius: 8px; /* 모서리 둥글게 */\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\n    z-index: 201; /* 드롭다운이 다른 요소들 위에 표시되도록 */\n    display: flex;\n    flex-direction: column; /* 세로로 정렬 */\n    font-size: 14px;\n}\n\n/* 드롭다운 항목 스타일 */\n.dropdown p, .dropdown a, .dropdown button {\n    padding: 8px;\n    margin: 5px 0; /* 항목 간 간격 */\n    text-align: center;\n    cursor: pointer;\n    border: none; /* 기본 테두리 제거 */\n    background-color: transparent; /* 배경 투명 */\n    font-size: 14px;\n    color: #333; /* 기본 텍스트 색상 */\n    transition: background-color 0.3s, color 0.3s; /* 호버시 색상 변화 */\n}\n\n/* 드롭다운 항목 호버 효과 */\n.dropdown p:hover, .dropdown a:hover, .dropdown button:hover {\n    background-color: #f1f1f1; /* 배경색 변경 */\n    color: #3f72af; /* 텍스트 색상 변경 */\n}\n\n/* 로그아웃 버튼 스타일 */\n.logout {\n    background-color: #ff5c5c; /* 빨간색 배경 */\n    color: white; /* 텍스트 흰색 */\n    border-radius: 4px; /* 모서리 둥글게 */\n    border: none; /* 기본 테두리 제거 */\n    padding: 8px;\n    text-align: center;\n    cursor: pointer;\n}\n\n/* 로그아웃 버튼 호버 효과 */\n.logout:hover {\n    background-color: #e04e4e; /* 호버 시 배경 색상 */\n}\n\n\n/* 말풍선 뾰족한 부분을 만들기 위한 삼각형 */\n.dropdown::after {\n    content: \"\";\n    position: absolute;\n    bottom: 100%; /* 드롭다운 메뉴의 위쪽에 삼각형을 위치시킴 */\n    left: 90%;\n    transform: translateX(-50%); /* 삼각형을 가운데로 조정 */\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-bottom: 10px solid white; /* 삼각형을 아래쪽으로 향하게 함 */\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/HeaderContainer/HeaderContainer.css b/Frontend/src/components/HeaderContainer/HeaderContainer.css
--- a/Frontend/src/components/HeaderContainer/HeaderContainer.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/HeaderContainer/HeaderContainer.css	(date 1739693533697)
@@ -63,7 +63,7 @@
     border: 1px solid #ddd; /* 테두리 색상 */
     border-radius: 8px; /* 모서리 둥글게 */
     box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1); /* 그림자 효과 */
-    z-index: 201; /* 드롭다운이 다른 요소들 위에 표시되도록 */
+    z-index: 500; /* 드롭다운이 다른 요소들 위에 표시되도록 */
     display: flex;
     flex-direction: column; /* 세로로 정렬 */
     font-size: 14px;
Index: Frontend/src/components/KakaoMapMarkers/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useEffect } from 'react';\nimport { useBaseMap } from \"../../contexts/ KakaoMapContext\";\n\nconst KakaoMapMarkers = ({ storelist }) => {\n\n    const { baseMap, isSDKLoaded } = useBaseMap();\n\n    useEffect(() => {\n        if (!baseMap || !storelist || !isSDKLoaded) return;\n\n        // storelist 기반으로 마커 생성\n        const markers = storelist.map((store) => {\n            const marker = new window.kakao.maps.Marker({\n                position: new window.kakao.maps.LatLng(store.locationX, store.locationY),\n                map: baseMap,\n                clickable: true,\n            });\n\n            const iwContent = `\n              <div style=\"\n                width: 100px;\n                padding: 15px;\n                text-align: center;\n                font-size: 14px;\n                color: #333;\n                position: relative;\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n              \">\n                ${store.storeName}\n                <div style=\"\n                  position: absolute;\n                  width: 0;\n                  height: 0;\n                \"></div>\n              </div>\n            `;            const infowindow = new window.kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: true,\n            });\n\n            // 클릭 이벤트 핸들러\n            window.kakao.maps.event.addListener(marker, 'click', () => {\n                infowindow.open(baseMap, marker);\n            });\n\n\n            // 클릭 시 해당 마커 위치로 지도 중심 이동\n            window.kakao.maps.event.addListener(marker, 'click', () => {\n                baseMap.panTo(marker.getPosition());\n            });\n\n            return marker;\n        });\n\n        // 컴포넌트 언마운트 시 생성한 마커 제거\n        return () => {\n            markers.forEach((marker) => marker.setMap(null));\n        };\n    }, [storelist, baseMap, isSDKLoaded]);\n\n    return null;\n};\n\nexport default KakaoMapMarkers;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/KakaoMapMarkers/index.js b/Frontend/src/components/KakaoMapMarkers/index.js
--- a/Frontend/src/components/KakaoMapMarkers/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/KakaoMapMarkers/index.js	(date 1739670682312)
@@ -35,20 +35,17 @@
                   height: 0;
                 "></div>
               </div>
-            `;            const infowindow = new window.kakao.maps.InfoWindow({
+            `;
+
+            const infowindow = new window.kakao.maps.InfoWindow({
                 content: iwContent,
                 removable: true,
             });
 
-            // 클릭 이벤트 핸들러
-            window.kakao.maps.event.addListener(marker, 'click', () => {
-                infowindow.open(baseMap, marker);
-            });
-
-
             // 클릭 시 해당 마커 위치로 지도 중심 이동
             window.kakao.maps.event.addListener(marker, 'click', () => {
                 baseMap.panTo(marker.getPosition());
+                infowindow.open(baseMap, marker);
             });
 
             return marker;
Index: Frontend/src/components/SearchNavbar/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css';\n\nconst SearchNavbar = ({lat, lng}) => {\n    const navigate = useNavigate()\n    const handlenavigate = () => {\n        navigate(`/searchbynutrition?lat=${lat}&llng=${lng}`);\n    }\n\n    const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n\n    useEffect(() => {\n        // 키보드 활성화 상태를 감지하는 함수\n        const handleResize = () => {\n            if (window.innerHeight < 600) { // 화면 높이가 특정 값보다 작아지면 키보드 활성화로 간주\n                setKeyboardVisible(true);\n            } else {\n                setKeyboardVisible(false);\n            }\n        };\n\n        // 이벤트 리스너 등록\n        window.addEventListener('resize', handleResize);\n\n        // 컴포넌트 언마운트 시 이벤트 리스너 정리\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    return (\n        <button\n            onClick={handlenavigate}\n            className=\"searchnavbarr\"\n            style={{\n                bottom: isKeyboardVisible ? '50px' : '0', // 키보드가 보이면 50px 위로 이동\n            }}\n        >\n            영양분으로 검색하기\n        </button>\n    );\n};\n\nexport default SearchNavbar;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/SearchNavbar/index.js b/Frontend/src/components/SearchNavbar/index.js
--- a/Frontend/src/components/SearchNavbar/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/SearchNavbar/index.js	(date 1739688699694)
@@ -5,7 +5,7 @@
 const SearchNavbar = ({lat, lng}) => {
     const navigate = useNavigate()
     const handlenavigate = () => {
-        navigate(`/searchbynutrition?lat=${lat}&llng=${lng}`);
+        navigate(`/searchbynutrition?lat=${lat}&lng=${lng}`);
     }
 
     const [isKeyboardVisible, setKeyboardVisible] = useState(false);
Index: Frontend/src/components/SearchNavbar/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.searchnavbarr {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 6vh;\n    z-index: 200; /* zIndex를 z-index로 변경 */\n    transition: bottom 0.3s ease; /* 부드러운 이동 효과 */\n    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1); /* 상단 그림자 추가 (선택 사항) */\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/SearchNavbar/style.css b/Frontend/src/components/SearchNavbar/style.css
--- a/Frontend/src/components/SearchNavbar/style.css	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/SearchNavbar/style.css	(date 1739686879287)
@@ -1,10 +1,9 @@
 .searchnavbarr {
-    position: fixed;
-    bottom: 0;
+    position: relative;
     left: 0;
     width: 100%;
     height: 6vh;
-    z-index: 200; /* zIndex를 z-index로 변경 */
+    z-index: 99; /* zIndex를 z-index로 변경 */
     transition: bottom 0.3s ease; /* 부드러운 이동 효과 */
     box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1); /* 상단 그림자 추가 (선택 사항) */
 }
\ No newline at end of file
Index: Frontend/src/components/RecommendList/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from \"react\";\nimport RecommendApi from \"../../api/RecommendApi\";\nimport './style.css'\n\nconst RecommendList = () => {\n    const [recommendations, setRecommendations] = useState([]);\n\n    useEffect(() => {\n        const fetchRecommendations = async () => {\n            const userId = 1; // 예시로 userId를 1로 설정\n            try {\n                // 추천 데이터를 API에서 가져오기\n                const response = await RecommendApi.get(`api/recommend/user`, {\n                    params: { userId }, // userId를 쿼리 파라미터로 전달\n                });\n\n                // API 응답 데이터가 유효한지 확인 후 상태 업데이트\n                if (response && response.data) {\n                    setRecommendations(response.data);\n                } else {\n                    console.error(\"추천 API에서 데이터를 받지 못했습니다.\");\n                    setRecommendations([]);\n                }\n            } catch (error) {\n                console.error(\"추천 데이터를 가져오는 중 오류 발생:\", error);\n                setRecommendations([]);\n            }\n        };\n\n        fetchRecommendations();\n    }, []);\n\n    return (\n        <div>\n            <h2>추천 리스트</h2>\n            <ul>\n                {recommendations.length > 0 ? (\n                    recommendations.map((item) => (\n                        <li key={item.id}>{item.name}</li> // API 응답에 id와 name이 있다고 가정\n                    ))\n                ) : (\n                    <li>추천 데이터가 없습니다.</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default RecommendList;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/RecommendList/index.js b/Frontend/src/components/RecommendList/index.js
--- a/Frontend/src/components/RecommendList/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/RecommendList/index.js	(date 1739683488881)
@@ -2,44 +2,41 @@
 import RecommendApi from "../../api/RecommendApi";
 import './style.css'
 
-const RecommendList = () => {
+const RecommendList = ({ userNo }) => {
     const [recommendations, setRecommendations] = useState([]);
 
     useEffect(() => {
         const fetchRecommendations = async () => {
-            const userId = 1; // 예시로 userId를 1로 설정
             try {
-                // 추천 데이터를 API에서 가져오기
-                const response = await RecommendApi.get(`api/recommend/user`, {
-                    params: { userId }, // userId를 쿼리 파라미터로 전달
-                });
+                // ✅ 올바른 API 함수 호출 방식
+                const data = await RecommendApi(userNo);
 
-                // API 응답 데이터가 유효한지 확인 후 상태 업데이트
-                if (response && response.data) {
-                    setRecommendations(response.data);
+                // ✅ 응답 데이터 직접 사용
+                if (!userNo) {
+                    setRecommendations(null);
                 } else {
-                    console.error("추천 API에서 데이터를 받지 못했습니다.");
+                    console.log("추천 데이터가 없습니다.");
                     setRecommendations([]);
                 }
             } catch (error) {
-                console.error("추천 데이터를 가져오는 중 오류 발생:", error);
+                console.error("추천 데이터 가져오기 실패:", error);
                 setRecommendations([]);
             }
         };
 
         fetchRecommendations();
-    }, []);
+    }, [userNo]); // ✅ userId 종속성 추가
 
     return (
         <div>
             <h2>추천 리스트</h2>
             <ul>
-                {recommendations.length > 0 ? (
+                { userNo ? (
                     recommendations.map((item) => (
                         <li key={item.id}>{item.name}</li> // API 응답에 id와 name이 있다고 가정
                     ))
                 ) : (
-                    <li>추천 데이터가 없습니다.</li>
+                    <li>로그인을 하시면 제품을 추천해드려요!</li>
                 )}
             </ul>
         </div>
Index: Frontend/src/api/resultBottomsheetApi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from 'axios';\n\nconst apiUrl = process.env.REACT_APP_BACKEND_API_URL;\n\nconst resultBottomSheetApi = async ({ coords, itemId, receivedData }) => {\n    try {\n        // API 호출\n        const response = await axios.get(`${apiUrl}/api/items/store-items`, {\n            params: { lat: coords.lat,\n                      lon: coords.lng,\n                      itemId: itemId,},\n        });\n\n        const resultnearStorelist = response.data;\n\n        if (response.status === 200) {\n            receivedData(resultnearStorelist); // 데이터를 부모 컴포넌트로 전달\n        } else {\n            console.error('API 요청 실패:');\n        }\n    } catch (error) {\n        if (axios.isCancel(error)) {\n            console.log('요청이 취소되었습니다:', error.message);\n        } else if (error.response) {\n            console.error('API 호출 중 오류 발생:', error.response.data);\n        } else if (error.request) {\n            console.error('응답을 받지 못했습니다:', error.request);\n        } else {\n            console.error('요청 설정 중 오류 발생:', error.message);\n        }\n\n    }\n};\n\nexport default resultBottomSheetApi\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/api/resultBottomsheetApi.js b/Frontend/src/api/resultBottomsheetApi.js
--- a/Frontend/src/api/resultBottomsheetApi.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/api/resultBottomsheetApi.js	(date 1739693352504)
@@ -5,10 +5,11 @@
 const resultBottomSheetApi = async ({ coords, itemId, receivedData }) => {
     try {
         // API 호출
-        const response = await axios.get(`${apiUrl}/api/items/store-items`, {
-            params: { lat: coords.lat,
-                      lon: coords.lng,
-                      itemId: itemId,},
+        const response = await axios.get(`${apiUrl}/api/store/list`, {
+            params: { x: coords.lat,
+                      y: coords.lng,
+                      itemId: itemId,
+                      },
         });
 
         const resultnearStorelist = response.data;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f896b346-e63a-4955-9c5d-cb4b97fbcc7e\" name=\"Changes\" comment=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/public/mylocation.jpg\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/KakaoMapContainer/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/KakaoMapContainer/index.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/KakaoMapMarkers/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/KakaoMapMarkers/index.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/MainPage/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/MainPage/index.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/MainPage/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/MainPage/style.css\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"origin/Frontend\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPENED&quot;,\n    &quot;assignee&quot;: {\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\n      &quot;username&quot;: &quot;project_888884_bot_5460f612fc7da9ccd36545f9da4341e6&quot;,\n      &quot;fullname&quot;: &quot;sooho&quot;\n    }\n  }\n}</component>\n  <component name=\"GitLabMergeRequestsSettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;first&quot;: &quot;https://lab.ssafy.com/s12-webmobile1-sub1/S12P11A506.git&quot;,\n    &quot;second&quot;: &quot;e33ee6b4-1615-45ef-a98a-173e132f977f&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2sfU0UdfCWOTDN8Cw8GdwsNPGOD\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"git-widget-placeholder\": \"FE/FIX/#103\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/mac/Downloads/SSAFY/SSAFY_season2/commonproject\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"ts.external.directory.path\": \"/Applications/WebStorm.app/Contents/plugins/javascript-plugin/jsLanguageServicesImpl/external\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Frontend/src/components/KioskCouponPopup\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Frontend/src/pages/KioskMain\" />\n      <recent name=\"$PROJECT_DIR$/Frontend/src/pages\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-WS-243.23654.157\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f896b346-e63a-4955-9c5d-cb4b97fbcc7e\" name=\"Changes\" comment=\"\" />\n      <created>1738845899858</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1738845899858</updated>\n      <workItem from=\"1738845900970\" duration=\"3670000\" />\n      <workItem from=\"1738886022718\" duration=\"24462000\" />\n      <workItem from=\"1738913909041\" duration=\"306000\" />\n      <workItem from=\"1738914277977\" duration=\"35000\" />\n      <workItem from=\"1738914322054\" duration=\"4199000\" />\n      <workItem from=\"1739081872737\" duration=\"36070000\" />\n      <workItem from=\"1739152824324\" duration=\"47000\" />\n      <workItem from=\"1739152876382\" duration=\"26000\" />\n      <workItem from=\"1739152929279\" duration=\"24000\" />\n      <workItem from=\"1739153054176\" duration=\"42770000\" />\n      <workItem from=\"1739247929410\" duration=\"30265000\" />\n      <workItem from=\"1739291868462\" duration=\"14695000\" />\n      <workItem from=\"1739308289993\" duration=\"36322000\" />\n      <workItem from=\"1739350559470\" duration=\"19822000\" />\n      <workItem from=\"1739426375278\" duration=\"2000\" />\n      <workItem from=\"1739426451033\" duration=\"11909000\" />\n      <workItem from=\"1739452113566\" duration=\"11559000\" />\n      <workItem from=\"1739513711472\" duration=\"24286000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739427567928</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739427567928</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739428785456</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739428785456</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739432038269</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739432038269</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739432340013</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739432340013</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739433129149</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739433129149</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739435017686</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739435017686</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739466231792</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739466231792</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739610602839</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739610602839</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"9\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"[FE/FIX] 배포 테스트 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 키오스크 ui 수정 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/.idea/workspace.xml	(date 1739695928695)
@@ -6,14 +6,27 @@
   <component name="ChangeListManager">
     <list default="true" id="f896b346-e63a-4955-9c5d-cb4b97fbcc7e" name="Changes" comment="[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/public/mylocation.jpg" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/App.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/App.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/api/RecommendApi.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/api/RecommendApi.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/api/resultBottomsheetApi.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/api/resultBottomsheetApi.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/HeaderContainer/HeaderContainer.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/HeaderContainer/HeaderContainer.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/components/KakaoMapContainer/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/KakaoMapContainer/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/components/KakaoMapMarkers/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/KakaoMapMarkers/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/RecommendList/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/RecommendList/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchBar/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchBar/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/MainPage/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/MainPage/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchNavbar/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchNavbar/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchNavbar/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchNavbar/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchNutritionScroll/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchNutritionScroll/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/pages/MainPage/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/MainPage/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/Search/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/Search/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/Search/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/Search/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchbyNurtrition/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchbyNurtrition/index.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchbyNurtrition/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchbyNurtrition/style.css" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -68,7 +81,7 @@
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "FE/FIX/#103",
+    "git-widget-placeholder": "FE/FIX/#104",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "/Users/mac/Downloads/SSAFY/SSAFY_season2/commonproject",
     "node.js.detected.package.eslint": "true",
@@ -121,7 +134,7 @@
       <workItem from="1739426375278" duration="2000" />
       <workItem from="1739426451033" duration="11909000" />
       <workItem from="1739452113566" duration="11559000" />
-      <workItem from="1739513711472" duration="24286000" />
+      <workItem from="1739513711472" duration="39963000" />
     </task>
     <task id="LOCAL-00001" summary="[FE/FIX] 배포 테스트 (#68)">
       <option name="closed" value="true" />
@@ -187,7 +200,15 @@
       <option name="project" value="LOCAL" />
       <updated>1739610602839</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)">
+      <option name="closed" value="true" />
+      <created>1739670282959</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1739670282959</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState, useRef, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport BottomSheetApi from \"../../api/BottomSheetApi\";\nimport resultBottomSheetApi from \"../../api/resultBottomsheetApi\";\nimport \"./DraggableBottomSheet.css\";\n\nconst DraggableBottomSheet = ({ coords, setStorelist, itemId=null }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [panelHeight, setPanelHeight] = useState(10); // 기본 높이 10%\n  const panelRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const startYRef = useRef(0);\n  const NAV_HEIGHT = 0 // 네비게이션 높이\n  const PANEL_WIDTH = \"100%\"; // 바텀시트 너비\n\n  // 드래그 시작 핸들러\n  const handlePointerDown = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    isDraggingRef.current = true;\n    startYRef.current = e.clientY || e.touches?.[0]?.clientY;\n\n    // 드래깅 클래스 추가\n    panelRef.current.classList.add(\"dragging\");\n  };\n\n  // 드래그 중 핸들러\n  const handlePointerMove = (e) => {\n    if (!isDraggingRef.current) return;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const currentY = e.clientY || e.touches?.[0]?.clientY;\n    const deltaY = startYRef.current - currentY;\n\n    requestAnimationFrame(() => {\n      let newHeight = panelHeight + (deltaY / window.innerHeight) * 100;\n      newHeight = Math.max(10, Math.min(newHeight, 85)); // 최소 10%, 최대 85%\n      setPanelHeight(newHeight);\n      startYRef.current = currentY; // 현재 위치 업데이트\n    });\n  };\n\n  // 드래그 종료 핸들러\n  const handlePointerUp = () => {\n    if (!isDraggingRef.current) return;\n\n    isDraggingRef.current = false;\n\n    // 스냅 위치 설정\n    setPanelHeight((prevHeight) => {\n      if (prevHeight > 70) return 85; // 최대 위치로 스냅\n      if (prevHeight > 20) return 50; // 중간 위치로 스냅\n      return 10; // 최소 위치로 스냅\n    });\n\n    // 드래깅 클래스 제거\n    panelRef.current.classList.remove(\"dragging\");\n  };\n\n  // 이벤트 리스너 등록 및 해제\n  useEffect(() => {\n    const handleGlobalPointerUp = () => {\n      if (isDraggingRef.current) handlePointerUp();\n    };\n\n    window.addEventListener(\"pointerup\", handleGlobalPointerUp);\n    window.addEventListener(\"touchend\", handleGlobalPointerUp);\n\n    return () => {\n      window.removeEventListener(\"pointerup\", handleGlobalPointerUp);\n      window.removeEventListener(\"touchend\", handleGlobalPointerUp);\n    };\n  }, []);\n\n  const [LocalStorelist, setLocalStorelist] = useState([]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchData = async () => {\n      if (!coords) return;\n\n      try {\n        // 현재 경로에 따라 API 선택\n        if (location.pathname.startsWith('/search/')) {\n          await resultBottomSheetApi({\n            coords,\n            itemId: itemId,\n            receivedData: (data) => {\n              if (isMounted) {\n                setLocalStorelist(data);\n                setStorelist(data);\n              }\n            }\n          });\n        } else {\n          await BottomSheetApi({\n            coords,\n            receivedData: (data) => {\n              if (isMounted) {\n                setLocalStorelist(data);\n                setStorelist(data);\n              }\n            }\n          });\n        }\n      } catch (error) {\n        console.error('API 요청 실패:', error);\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [coords, itemId, setStorelist, location.pathname]); // itemID와 경로 변경 감지\n\n  return (\n      <div\n          ref={panelRef}\n          className=\"bottom-sheet\"\n          style={{\n            height: `${panelHeight}%`,\n            bottom: `${NAV_HEIGHT}px`,\n            width: `${PANEL_WIDTH}`,\n            transition: isDraggingRef.current ? \"none\" : \"height 0.3s ease\", // 드래그 중에는 트랜지션 비활성화\n          }}\n          onPointerMove={handlePointerMove}\n          onTouchMove={handlePointerMove}\n      >\n        {/* 드래그 핸들 */}\n        <div className=\"drag-handle\" onPointerDown={handlePointerDown} onTouchStart={handlePointerDown}></div>\n\n        {/* 바텀시트 내용 */}\n        <div className=\"bottom-sheet-content\">\n          <h3 style={{ marginTop: 50 }}>근처 매장 리스트</h3>\n          {LocalStorelist ? (\n              <ul>\n                {LocalStorelist.map((store, index) => (\n                    <li\n                        onClick={() => navigate(`/storedetail/${store.storeNo}`)}\n                        key={index}\n                    >\n                      <span className=\"store-name\">{store.storeName}</span>\n                      <span className=\"store-distance\">{parseFloat(store.distance).toFixed(0)}m</span>\n                    </li>\n                ))}\n              </ul>\n          ) : (\n              <p>근처에 매장이 없습니다.</p>\n          )}\n        </div>\n      </div>\n  );\n};\n\nexport default DraggableBottomSheet;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js b/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js
--- a/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/components/DraggableBottomSheet/DraggableBottomSheet.js	(date 1739694762868)
@@ -1,162 +1,108 @@
-import { useState, useRef, useEffect } from "react";
+import { useState, useRef, useEffect, useCallback, memo } from "react";
 import { useNavigate, useLocation } from "react-router-dom";
 import BottomSheetApi from "../../api/BottomSheetApi";
 import resultBottomSheetApi from "../../api/resultBottomsheetApi";
 import "./DraggableBottomSheet.css";
 
-const DraggableBottomSheet = ({ coords, setStorelist, itemId=null }) => {
+// 성능 최적화를 위한 memoization
+const DraggableBottomSheet = memo(({ coords, setStorelist, itemId = null }) => {
   const location = useLocation();
   const navigate = useNavigate();
-  const [panelHeight, setPanelHeight] = useState(10); // 기본 높이 10%
+  const [panelHeight, setPanelHeight] = useState(10);
   const panelRef = useRef(null);
   const isDraggingRef = useRef(false);
   const startYRef = useRef(0);
-  const NAV_HEIGHT = 0 // 네비게이션 높이
-  const PANEL_WIDTH = "100%"; // 바텀시트 너비
+  const abortControllerRef = useRef(new AbortController());
+  const [LocalStorelist, setLocalStorelist] = useState([]);
 
-  // 드래그 시작 핸들러
-  const handlePointerDown = (e) => {
+  // 검색 결과[2] 참조: 드래그 핸들러 최적화
+  const handlePointerDown = useCallback((e) => {
     e.preventDefault();
-    e.stopPropagation();
-
     isDraggingRef.current = true;
-    startYRef.current = e.clientY || e.touches?.[0]?.clientY;
-
-    // 드래깅 클래스 추가
+    startYRef.current = e.clientY;
     panelRef.current.classList.add("dragging");
-  };
+  }, []);
 
-  // 드래그 중 핸들러
-  const handlePointerMove = (e) => {
+  const handlePointerMove = useCallback((e) => {
     if (!isDraggingRef.current) return;
-
-    e.preventDefault();
-    e.stopPropagation();
-
-    const currentY = e.clientY || e.touches?.[0]?.clientY;
-    const deltaY = startYRef.current - currentY;
-
-    requestAnimationFrame(() => {
-      let newHeight = panelHeight + (deltaY / window.innerHeight) * 100;
-      newHeight = Math.max(10, Math.min(newHeight, 85)); // 최소 10%, 최대 85%
-      setPanelHeight(newHeight);
-      startYRef.current = currentY; // 현재 위치 업데이트
-    });
-  };
+    const deltaY = (startYRef.current - e.clientY) / window.innerHeight * 100;
+    setPanelHeight(prev => Math.max(10, Math.min(prev + deltaY, 85)));
+    startYRef.current = e.clientY;
+  }, []);
 
-  // 드래그 종료 핸들러
-  const handlePointerUp = () => {
-    if (!isDraggingRef.current) return;
-
+  const handlePointerUp = useCallback(() => {
     isDraggingRef.current = false;
-
-    // 스냅 위치 설정
-    setPanelHeight((prevHeight) => {
-      if (prevHeight > 70) return 85; // 최대 위치로 스냅
-      if (prevHeight > 20) return 50; // 중간 위치로 스냅
-      return 10; // 최소 위치로 스냅
-    });
-
-    // 드래깅 클래스 제거
-    panelRef.current.classList.remove("dragging");
-  };
-
-  // 이벤트 리스너 등록 및 해제
-  useEffect(() => {
-    const handleGlobalPointerUp = () => {
-      if (isDraggingRef.current) handlePointerUp();
-    };
-
-    window.addEventListener("pointerup", handleGlobalPointerUp);
-    window.addEventListener("touchend", handleGlobalPointerUp);
-
-    return () => {
-      window.removeEventListener("pointerup", handleGlobalPointerUp);
-      window.removeEventListener("touchend", handleGlobalPointerUp);
-    };
+    setPanelHeight(prev => prev > 70 ? 85 : prev > 20 ? 50 : 10);
+    panelRef.current?.classList.remove("dragging");
   }, []);
 
-  const [LocalStorelist, setLocalStorelist] = useState([]);
-
-  useEffect(() => {
-    let isMounted = true;
-
-    const fetchData = async () => {
-      if (!coords) return;
+  // 검색 결과[1][4] 참조: API 호출 최적화
+  const fetchData = useCallback(async () => {
+    abortControllerRef.current.abort();
+    abortControllerRef.current = new AbortController();
 
-      try {
-        // 현재 경로에 따라 API 선택
-        if (location.pathname.startsWith('/search/')) {
-          await resultBottomSheetApi({
-            coords,
-            itemId: itemId,
-            receivedData: (data) => {
-              if (isMounted) {
-                setLocalStorelist(data);
-                setStorelist(data);
-              }
-            }
-          });
-        } else {
-          await BottomSheetApi({
-            coords,
-            receivedData: (data) => {
-              if (isMounted) {
-                setLocalStorelist(data);
-                setStorelist(data);
-              }
-            }
-          });
-        }
-      } catch (error) {
-        console.error('API 요청 실패:', error);
-      }
-    };
+    try {
+      const apiCall = location.pathname.startsWith('/search/results')
+          ? resultBottomSheetApi
+          : BottomSheetApi;
+
+      await apiCall({
+        coords,
+        itemId,
+        signal: abortControllerRef.current.signal,
+        receivedData: (data) => {
+          setLocalStorelist(data);
+          setStorelist(data);
+        }
+      });
+    } catch (err) {
+      if (err.name !== 'AbortError') console.error('API Error:', err);
+    }
+  }, [coords.lat, coords.lng, itemId, location.pathname]);
 
+  useEffect(() => {
     fetchData();
+    return () => abortControllerRef.current.abort();
+  }, [fetchData]);
 
-    return () => {
-      isMounted = false;
-    };
-  }, [coords, itemId, setStorelist, location.pathname]); // itemID와 경로 변경 감지
-
+  // 검색 결과[5] 참조: CSS containment 적용
   return (
       <div
           ref={panelRef}
           className="bottom-sheet"
           style={{
             height: `${panelHeight}%`,
-            bottom: `${NAV_HEIGHT}px`,
-            width: `${PANEL_WIDTH}`,
-            transition: isDraggingRef.current ? "none" : "height 0.3s ease", // 드래그 중에는 트랜지션 비활성화
+            contain: 'content',  // 렌더링 최적화
+            transition: isDraggingRef.current ? "none" : "height 0.3s cubic-bezier(0.4, 0, 0.2, 1)"
           }}
+          onPointerDown={handlePointerDown}
           onPointerMove={handlePointerMove}
-          onTouchMove={handlePointerMove}
+          onPointerUp={handlePointerUp}
       >
-        {/* 드래그 핸들 */}
-        <div className="drag-handle" onPointerDown={handlePointerDown} onTouchStart={handlePointerDown}></div>
+        <div className="drag-handle" />
 
-        {/* 바텀시트 내용 */}
         <div className="bottom-sheet-content">
-          <h3 style={{ marginTop: 50 }}>근처 매장 리스트</h3>
-          {LocalStorelist ? (
-              <ul>
-                {LocalStorelist.map((store, index) => (
+          <h3 style={{ marginTop: 30 }}>근처 매장 리스트</h3>
+          {LocalStorelist.length ? (
+              <ul style={{ contentVisibility: 'auto' }}>
+                {LocalStorelist.map((store) => (
                     <li
+                        key={store.storeNo}
                         onClick={() => navigate(`/storedetail/${store.storeNo}`)}
-                        key={index}
                     >
                       <span className="store-name">{store.storeName}</span>
-                      <span className="store-distance">{parseFloat(store.distance).toFixed(0)}m</span>
+                      <span className="store-distance">
+                  {parseFloat(store.distance).toFixed(0)}m
+                </span>
                     </li>
                 ))}
               </ul>
           ) : (
-              <p>근처에 매장이 없습니다.</p>
+              <p>근처에 매장이 없거나 검색한 제품을 가진 매장이 없어요. </p>
           )}
         </div>
       </div>
   );
-};
+});
 
 export default DraggableBottomSheet;
Index: Frontend/src/pages/Search/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SearchApi from \"../../api/searchApi\";\nimport SearchBar from \"../../components/SearchBar\";\nimport RecommendList from \"../../components/RecommendList\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport SearchDropdownList from \"../../components/SearchDropdownList\";\nimport SearchNavbar from \"../../components/SearchNavbar\";\n\nimport './style.css';\n\n// 디바운스 함수 정의\nconst debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n            func(...args);\n        }, delay);\n    };\n};\n\nconst Search = () => {\n    const [query, setQuery] = useState(\"\"); // 검색어 상태\n    const [results, setResults] = useState([]); // API 결과 상태\n    const [isDropdownVisible, setDropdownVisible] = useState(false); // 드롭다운 표시 여부\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n\n    const lat = queryParams.get('lat');\n    const lng = queryParams.get('lng');\n\n    // 디바운스를 적용한 API 호출 함수\n    const debouncedFetchResults = debounce(async (searchQuery) => {\n        try {\n            const data = await SearchApi(searchQuery); // SearchApi 호출\n            setResults(data); // API 결과 업데이트\n            setDropdownVisible(data.length > 0);\n        } catch (error) {\n            console.error(\"검색 오류:\", error);\n        }\n    }, 500); // 500ms 지연\n\n    // 검색어 변경 시 디바운스 호출\n    const handleQueryChange = (newQuery) => {\n        setQuery(newQuery);\n        debouncedFetchResults(newQuery);\n    };\n\n    const handleItemClick = (item) => {\n        console.log(\"선택된 항목:\", item);\n        setDropdownVisible(false); // 선택 후 드롭다운 숨김\n        navigate(`/search/results?lat=${lat}&lng=${lng}&itemId=${item.itemId}`);\n    };\n\n    return (\n        <div className=\"searchpage\">\n            <div className=\"searchpageheader\"><HeaderContainer /></div>\n            <div className=\"searchpagesearchbar\">\n                <SearchBar setQuery={handleQueryChange} />\n            </div>\n            <div className=\"searchpagerecommend\"><RecommendList/></div>\n            <div className=\"searchpagenavbar\"><SearchNavbar\n                                                lat = {lat}\n                                                lng = {lng}\n            /></div>\n            {isDropdownVisible && results?.length > 0 && (\n                <div className=\"searchpagedropdown\">\n                    <SearchDropdownList results={results} onItemClick={handleItemClick} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Search;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/Search/index.js b/Frontend/src/pages/Search/index.js
--- a/Frontend/src/pages/Search/index.js	(revision 131f70e5323dbe875e8a54455fb24719114f71c6)
+++ b/Frontend/src/pages/Search/index.js	(date 1739694877470)
@@ -1,3 +1,4 @@
+// Search.jsx (메인 페이지)
 import { useState } from "react";
 import { useLocation, useNavigate } from "react-router-dom";
 import SearchApi from "../../api/searchApi";
@@ -6,10 +7,9 @@
 import HeaderContainer from "../../components/HeaderContainer/HeaderContainer";
 import SearchDropdownList from "../../components/SearchDropdownList";
 import SearchNavbar from "../../components/SearchNavbar";
-
+import useAuth from "../../hooks/useAuth";
 import './style.css';
 
-// 디바운스 함수 정의
 const debounce = (func, delay) => {
     let timeoutId;
     return (...args) => {
@@ -21,56 +21,65 @@
 };
 
 const Search = () => {
-    const [query, setQuery] = useState(""); // 검색어 상태
-    const [results, setResults] = useState([]); // API 결과 상태
-    const [isDropdownVisible, setDropdownVisible] = useState(false); // 드롭다운 표시 여부
+    const [query, setQuery] = useState("");
+    const [results, setResults] = useState([]);
+    const [isDropdownVisible, setDropdownVisible] = useState(false);
     const navigate = useNavigate();
-
     const location = useLocation();
+    const { logindata } = useAuth();
     const queryParams = new URLSearchParams(location.search);
 
     const lat = queryParams.get('lat');
     const lng = queryParams.get('lng');
 
-    // 디바운스를 적용한 API 호출 함수
     const debouncedFetchResults = debounce(async (searchQuery) => {
         try {
-            const data = await SearchApi(searchQuery); // SearchApi 호출
-            setResults(data); // API 결과 업데이트
+            const data = await SearchApi(searchQuery);
+            setResults(data);
             setDropdownVisible(data.length > 0);
         } catch (error) {
             console.error("검색 오류:", error);
         }
-    }, 500); // 500ms 지연
+    }, 500);
 
-    // 검색어 변경 시 디바운스 호출
     const handleQueryChange = (newQuery) => {
         setQuery(newQuery);
         debouncedFetchResults(newQuery);
     };
 
+    const handleClear = () => {
+        setDropdownVisible(false);
+        setResults([]);
+    };
+
     const handleItemClick = (item) => {
-        console.log("선택된 항목:", item);
-        setDropdownVisible(false); // 선택 후 드롭다운 숨김
-        navigate(`/search/results?lat=${lat}&lng=${lng}&itemId=${item.itemId}`);
+        setDropdownVisible(false);
+        navigate(`/search/results?lat=${lat}&lng=${lng}&itemId=${item.itemId}&itemName=${item.itemName}`);
     };
 
     return (
         <div className="searchpage">
             <div className="searchpageheader"><HeaderContainer /></div>
             <div className="searchpagesearchbar">
-                <SearchBar setQuery={handleQueryChange} />
-            </div>
-            <div className="searchpagerecommend"><RecommendList/></div>
-            <div className="searchpagenavbar"><SearchNavbar
-                                                lat = {lat}
-                                                lng = {lng}
-            /></div>
-            {isDropdownVisible && results?.length > 0 && (
-                <div className="searchpagedropdown">
-                    <SearchDropdownList results={results} onItemClick={handleItemClick} />
-                </div>
-            )}
+                <SearchBar
+                    setQuery={handleQueryChange}
+                    onClear={handleClear}
+                />
+                {isDropdownVisible && results?.length > 0 && (
+                    <div className="searchpagedropdown">
+                        <SearchDropdownList
+                            results={results}
+                            onItemClick={handleItemClick}
+                        />
+                    </div>
+                )}
+            </div>
+            <div className="searchpagenavbar">
+                <SearchNavbar lat={lat} lng={lng} />
+            </div>
+            <div className="searchpagerecommend">
+                <RecommendList userNo={logindata?.userNo} />
+            </div>
         </div>
     );
 };
