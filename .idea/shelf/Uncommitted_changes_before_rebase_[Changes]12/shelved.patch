Index: Frontend/src/pages/StoredetailRequest/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport SearchApi from \"../../api/searchApi\";\nimport RequestApi from \"../../api/RequestApi\";\nimport SearchBar from \"../../components/SearchBar\";\nimport SearchDropdownList from \"../../components/SearchDropdownList\";\nimport './style.css';\n\n\n// 디바운스 함수 정의\nconst debounce = (func, delay) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n            func(...args);\n        }, delay);\n    };\n};\n\nconst StoredetailRequestPopup = () => {\n    const [query, setQuery] = useState(\"\"); // 검색어 상태\n    const [results, setResults] = useState([]); // API 결과 상태\n    const [selectedItem, setSelectedItem] = useState(0);\n    const [isDropdownVisible, setDropdownVisible] = useState(false); // 드롭다운 표시 여부\n    const [productImage, setProductImage] = useState(null);\n    const [message, setMessage] = useState('아이스크림을 검색 후 골라보세요!');\n    const navigate = useNavigate();\n    const { storeNo } = useParams();\n\n\n    // 디바운스를 적용한 API 호출 함수\n    const debouncedFetchResults = debounce(async (searchQuery) => {\n        try {\n            const data = await SearchApi(searchQuery); // SearchApi 호출\n            setResults(data); // API 결과 업데이트\n            setDropdownVisible(data.length > 0);\n        } catch (error) {\n            console.error(\"검색 오류:\", error);\n        }\n    }, 500); // 500ms 지연\n\n    // 검색어 변경 시 디바운스 호출\n    const handleQueryChange = (newQuery) => {\n        setQuery(newQuery);\n        debouncedFetchResults(newQuery);\n    };\n\n    const handleItemClick = (item) => {\n        setProductImage(item.itemImageUrl)\n        setSelectedItem(item.itemId);\n        setMessage(`${item.itemName}\\n이 선택되었어요!`)\n        setDropdownVisible(false); // 선택 후 드롭다운 숨김\n    };\n\n    const handleSubmit = async () => {\n        const itemId = selectedItem;\n        const storeId = storeNo;\n\n        console.log(itemId)\n        if (itemId === 0) {\n            alert('제품을 선택 후 제출해주세요');\n            return; // 함수 실행 중지\n        }\n\n        try {\n            // API 호출\n            const result = await RequestApi({\n                storeId,\n                itemId,\n            });\n\n            // API 응답 처리\n            console.log('요청 성공:', result);\n            alert('요청이 성공적으로 전달되었어요!')\n            navigate(-1)\n\n        } catch (error) {\n            console.error('요청 실패:', error);\n            alert('오류가 발생했습니다. 다시 시도해주세요.')\n        }\n    };\n\n    const handleClear = () => {\n        setDropdownVisible(false);\n        setResults([]);\n    };\n\n    return (\n        <div>\n            <div className=\"requestheader\"><HeaderContainer/></div>\n            <div className=\"storedetailpagerequestpopup\">\n                <div className=\"storedetailrequest\">\n                    <div className=\"requestnotice\">입고 요청하기</div>\n                    <div className=\"requestsearchbar\">\n                        <SearchBar setQuery={handleQueryChange} onClear={handleClear} />\n                        {isDropdownVisible && results?.length > 0 && (\n                            <div className=\"requestdropdown\">\n                                <SearchDropdownList results={results} onItemClick={handleItemClick}/>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"requestitemimage\">\n                        <img\n                        src={productImage || '/logo.png'}\n                        className=\"requestitemimageimg\"\n                        onError={(e) => {\n                            e.target.src = '/logo.png';\n                        }}\n                    />\n                        <div className=\"requestitemimagetxt\">{ message }</div>\n                    </div>\n                    <div className=\"requestbuttonzone\">\n                        <button className=\"requestbuttons\" onClick={handleSubmit}>제출하기</button>\n                        <button className=\"requestbuttons\" onClick={() => navigate(-1)}>닫기</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StoredetailRequestPopup;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/StoredetailRequest/index.js b/Frontend/src/pages/StoredetailRequest/index.js
--- a/Frontend/src/pages/StoredetailRequest/index.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/pages/StoredetailRequest/index.js	(date 1739709426006)
@@ -28,6 +28,8 @@
     const [message, setMessage] = useState('아이스크림을 검색 후 골라보세요!');
     const navigate = useNavigate();
     const { storeNo } = useParams();
+    const nStoreNo = Number(storeNo)
+
 
 
     // 디바운스를 적용한 API 호출 함수
@@ -56,9 +58,8 @@
 
     const handleSubmit = async () => {
         const itemId = selectedItem;
-        const storeId = storeNo;
+        const storeId = nStoreNo;
 
-        console.log(itemId)
         if (itemId === 0) {
             alert('제품을 선택 후 제출해주세요');
             return; // 함수 실행 중지
Index: Frontend/src/pages/StoredetailFlearequest/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport FleaRequestApi from \"../../api/FleaRequestApi\";\nimport './style.css';\n\nconst StoredetailFlearequest = () => {\n    const navigate = useNavigate();\n\n    const [formData, setFormData] = useState({\n        userAccount: \"\",\n        userBank: \"\",\n        accountName: \"\",\n        itemName: \"\",\n        quantity: 1,\n        price: 10000,\n        sectionNumber: 1,\n        startDate: \"\",\n        expireDate: 30,\n        imagePath: \"\", // Base64 형식으로 저장\n    });\n\n    // 입력값 변경 핸들러\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    // 이미지 파일 업로드 핸들러\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setFormData({\n                    ...formData,\n                    imagePath: reader.result, // Base64 데이터 저장\n                });\n            };\n            reader.readAsDataURL(file); // 파일을 Base64로 변환\n        }\n    };\n\n    // 폼 제출 핸들러\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"입력된 데이터:\", formData);\n        FleaRequestApi(formData);\n        // API 호출 또는 추가 처리\n    };\n\n    return (\n        <div className=\"storedetailpageflearequest\">\n            <div className=\"requestheader\"><HeaderContainer /></div>\n            <div className=\"requestpopup\">\n                <div className=\"storedetailflea\">\n                    <div className=\"fleanotice\">플리마켓 신청하기</div>\n                    <form onSubmit={handleSubmit} className=\"fleaform\">\n                        <ul>\n                            <li>\n                                <label>계좌:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"userAccount\"\n                                    value={formData.userAccount}\n                                    onChange={handleChange}\n                                    placeholder=\"계좌번호를 입력하세요\"\n                                />\n                            </li>\n                            <li>\n                                <label>은행:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"userBank\"\n                                    value={formData.userBank}\n                                    onChange={handleChange}\n                                    placeholder=\"은행 이름을 입력하세요\"\n                                />\n                            </li>\n                            <li>\n                                <label>계좌:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"accountName\"\n                                    value={formData.accountName}\n                                    onChange={handleChange}\n                                    placeholder=\"소유주 이름을 입력하세요\"\n                                />\n                            </li>\n                            <li>\n                                <label>상품:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"itemName\"\n                                    value={formData.itemName}\n                                    onChange={handleChange}\n                                    placeholder=\"상품 이름을 입력하세요\"\n                                />\n                            </li>\n                            <li>\n                                <label>수량:</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"quantity\"\n                                    value={formData.quantity}\n                                    onChange={handleChange}\n                                    min=\"1\"\n                                />\n                            </li>\n                            <li>\n                                <label>가격:</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"price\"\n                                    value={formData.price}\n                                    onChange={handleChange}\n                                    min=\"0\"\n                                />\n                            </li>\n                            <li>\n                                <label>섹션:</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"sectionNumber\"\n                                    value={formData.sectionNumber}\n                                    onChange={handleChange}\n                                />\n                            </li>\n                            <li className=\"datetimeinputfield\">\n                                <label>시작:</label>\n                                <input\n                                    type=\"datetime-local\"\n                                    name=\"startDate\"\n                                    value={formData.startDate}\n                                    onChange={handleChange}\n                                />\n                            </li>\n                            <li>\n                                <label>보관:</label>\n                                <input\n                                    type=\"number\"\n                                    name=\"expireDate\"\n                                    value={formData.expireDate}\n                                    onChange={handleChange}\n                                />\n                            </li>\n                            {/* 파일 업로드 버튼 */}\n                            <li>\n                                <label>사진:</label>\n                                <input\n                                    type=\"file\"\n                                    accept=\"image/*\" // 이미지 파일만 허용\n                                    onChange={handleFileChange} // 파일 변경 핸들러 호출\n                                />\n                            </li>\n                        </ul>\n                        {/* 제출 버튼 */}\n                        <button type=\"submit\" className=\"flearequestsubmitbutton\">제출하기</button>\n                    </form>\n\n                    {/* 뒤로가기 버튼 */}\n                    <button\n                        onClick={() => navigate(-1)}\n                        className='flearequestbackbutton'>뒤로가기</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StoredetailFlearequest;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/StoredetailFlearequest/index.js b/Frontend/src/pages/StoredetailFlearequest/index.js
--- a/Frontend/src/pages/StoredetailFlearequest/index.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/pages/StoredetailFlearequest/index.js	(date 1739716861955)
@@ -1,13 +1,16 @@
-import React, { useState } from "react";
-import { useNavigate } from "react-router-dom";
+import { useState } from "react";
+import { useNavigate,useParams } from "react-router-dom";
 import HeaderContainer from "../../components/HeaderContainer/HeaderContainer";
 import FleaRequestApi from "../../api/FleaRequestApi";
 import './style.css';
 
 const StoredetailFlearequest = () => {
     const navigate = useNavigate();
+    const { storeNo } = useParams();
+    const nStoreNo = Number(storeNo)
 
     const [formData, setFormData] = useState({
+        storeId : nStoreNo,
         userAccount: "",
         userBank: "",
         accountName: "",
@@ -15,7 +18,7 @@
         quantity: 1,
         price: 10000,
         sectionNumber: 1,
-        startDate: "",
+        application_Date: "",
         expireDate: 30,
         imagePath: "", // Base64 형식으로 저장
     });
@@ -61,16 +64,6 @@
                     <form onSubmit={handleSubmit} className="fleaform">
                         <ul>
                             <li>
-                                <label>계좌:</label>
-                                <input
-                                    type="text"
-                                    name="userAccount"
-                                    value={formData.userAccount}
-                                    onChange={handleChange}
-                                    placeholder="계좌번호를 입력하세요"
-                                />
-                            </li>
-                            <li>
                                 <label>은행:</label>
                                 <input
                                     type="text"
@@ -81,7 +74,17 @@
                                 />
                             </li>
                             <li>
-                                <label>계좌:</label>
+                                <label>계좌1:</label>
+                                <input
+                                    type="number"
+                                    name="userAccount"
+                                    value={formData.userAccount}
+                                    onChange={handleChange}
+                                    placeholder="계좌번호를 입력하세요"
+                                />
+                            </li>
+                            <li>
+                                <label>계좌2:</label>
                                 <input
                                     type="text"
                                     name="accountName"
@@ -113,7 +116,7 @@
                             <li>
                                 <label>가격:</label>
                                 <input
-                                    type="text"
+                                    type="number"
                                     name="price"
                                     value={formData.price}
                                     onChange={handleChange}
Index: Frontend/src/api/RequestApi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import apiClient from \"./apiClient\";\n\nconst RequestApi = async ({ storeId, itemId }) => {\n    try {\n        const response = await apiClient.post(`/api/item/register`, {\n            storeId: storeId,\n            itemId: itemId\n        });\n\n        if (response.status >= 200 && response.status < 300) {\n            console.log(\"API 호출 성공:\", response.data);\n            return response.data;\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n    } catch (error) {\n        console.error(\"API 호출 오류:\", error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport default RequestApi;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/api/RequestApi.js b/Frontend/src/api/RequestApi.js
--- a/Frontend/src/api/RequestApi.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/api/RequestApi.js	(date 1739709122156)
@@ -18,4 +18,4 @@
     }
 };
 
-export default RequestApi;
+export default RequestApi;
\ No newline at end of file
Index: Frontend/src/pages/Storedetail/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport StoreDetailbar from \"../../components/StoreDetailBar\";\nimport StoreDetailApi from \"../../api/StoreDetailApi\";\nimport \"./style.css\";\n\nconst StoreDetail = () => {\n    const [productData, setProductData] = useState(null); // API 데이터를 저장할 상태\n    const [activeTab, setActiveTab] = useState(\"storeItems\"); // 활성화된 탭 상태\n    const [selectedItem, setSelectedItem] = useState(null); // 선택된 아이템 데이터\n    const [selectedType, setSelectedType] = useState(\"\"); // 선택된 아이템 타입\n    const { storeNo } = useParams();\n\n    const handleTabClick = (tab) => {\n        setActiveTab(tab); // 활성화된 탭 업데이트\n    };\n\n    const handleCouponGet = () => {\n\n    }\n\n    const navigate = useNavigate();\n\n    const navigateRequestPage = () => {\n        navigate(`/storedetail/${storeNo}/request`);\n    };\n\n    const navigateFlearequest = () => {\n        navigate(`/storeDetail/${storeNo}/flearequest`);\n    };\n\n    const handleItemClick = (item, type) => {\n        setSelectedItem(item); // 선택된 아이템 데이터 저장\n        setSelectedType(type); // 선택된 타입 저장 (store, fli, announcement)\n    };\n\n    const closePopup = () => {\n        setSelectedItem(null); // 팝업 닫기\n        setSelectedType(\"\");\n    };\n\n    // 날짜 형식 변환 함수\n    const formatDate = (dateString) => {\n        const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }; // 예시: \"2025년 2월 6일\"\n        return new Date(dateString).toLocaleDateString(\"ko-KR\", options);\n    };\n\n    useEffect(() => {\n        // API 호출 및 데이터 설정\n        StoreDetailApi(storeNo, setProductData);\n    }, []); // 빈 배열을 의존성으로 전달하여 한 번만 실행되도록 설정\n\n\n    return (\n        <div className=\"searchpagedom\">\n            <div className=\"storedetailheadercontainer\"><HeaderContainer /></div>\n            <div className=\"storedetailphotoinfo\">\n                <div className=\"market-image\">\n                    {productData?.store?.storeImageUrl ? (\n                        <img\n                            src={productData.store.storeImageUrl}\n                            alt=\"StoreImage\"\n                            onError={(e) => {\n                                e.target.style.display = 'none';  // 이미지 숨기기\n                            }}\n                        />\n                    ) : (\n                        <div className=\"image-fallback\">\n                            <span>등록된 이미지가<br/> 없습니다.</span>\n                        </div>\n                    )}\n                </div>\n                <div className=\"market-detail\">\n                    <div className=\"market-name\">{productData?.store.name}</div>\n                    <div className=\"market-location\">{productData?.store.address}</div>\n                    <div className=\"storedetail-btnlist\">\n                        <button className=\"couponrequestbtn\">쿠폰<br/>수령</button>\n                        <button className=\"requestbtn\" onClick={navigateRequestPage}>입고<br/>요청</button>\n                        <button className=\"flearequestbtn\" onClick={navigateFlearequest}>플리<br/>신청</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"storedetailnavbar\">\n                <StoreDetailbar onTabClick={handleTabClick} />\n            </div>\n\n            <div className=\"storedetailmarketinfo\">\n                {/* 상점 상품 탭 */}\n                {activeTab === \"storeItems\" && (\n                    productData?.storeItems?.length ? (\n                        <ul className=\"storedetailul\">\n                            {productData.storeItems.map((storeItem) => (\n                                <li\n                                    key={storeItem.itemId}\n                                    className=\"storedetailmarketli\"\n                                    onClick={() => handleItemClick(storeItem, \"store\")}\n                                >\n                                    <img\n                                        src={storeItem.itemImageUrl}\n                                        alt=\"상품 이미지\"\n                                        className=\"storedetailitemimage\"\n                                    />\n                                    <div className=\"item-info\">\n                                        <span>{storeItem.itemName}</span>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div className=\"no-items\">등록된 상품이 없습니다</div>\n                    )\n                )}\n\n                {/* FLI 상품 탭 */}\n                {activeTab === \"fliItems\" && (\n                    productData?.fliItems?.length ? (\n                        <ul className=\"storedetailul\">\n                            {productData.fliItems.map((fliItem) => (\n                                <li\n                                    key={fliItem.fliItemId}\n                                    className=\"storedetailmarketli\"\n                                    onClick={() => handleItemClick(fliItem, \"fli\")}\n                                >\n                                    <img\n                                        src={fliItem.imagePath || '/logo.png'}\n                                        className=\"storedetailitemimage\"\n                                        onError={(e) => {\n                                            e.target.src = '/logo.png';\n                                        }}\n                                    />\n                                    <div className=\"item-info\">\n                                        <span>{fliItem.fliItemName}</span>\n                                        <span>{fliItem.price.toLocaleString()}원</span>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div className=\"no-items\">FLI 상품이 존재하지 않습니다</div>\n                    )\n                )}\n\n                {/* 공지사항 탭 */}\n                {activeTab === \"announcements\" && (\n                    productData?.announcements?.length ? (\n                        <ul className=\"storedetailul\">\n                            {productData.announcements.map((announcement) => (\n                                <li\n                                    key={announcement.boardId}\n                                    className=\"storedetailmarketli\"\n                                    onClick={() => handleItemClick(announcement, \"announcement\")}\n                                >\n                                    <div className=\"item-info\">\n                                        <span>{announcement.title}</span>\n                                        <span>{formatDate(announcement.createdAt)}</span>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div className=\"no-items\">등록된 공지사항이 없습니다</div>\n                    )\n                )}\n            </div>\n\n\n            {/* 팝업 */}\n            {selectedItem && (\n                <div className=\"popup-overlay\" onClick={closePopup}>\n                    <div className=\"popup-content\" onClick={(e) => e.stopPropagation()}>\n                        {selectedType === \"store\" && (\n                            <>\n                                <h3>{selectedItem.itemName}</h3>\n                                <p>가격: {selectedItem.finalPrice}원</p>\n                                <p>수량: {selectedItem.quantity}</p>\n                            </>\n                        )}\n                        {selectedType === \"fli\" && (\n                            <>\n                                <h3>{selectedItem.fliItemName}</h3>\n                                <p>가격: {selectedItem.price}원</p>\n                                <p>수량: {selectedItem.quantity}</p>\n                            </>\n                        )}\n                        {selectedType === \"announcement\" && (\n                            <>\n                                <h3>{selectedItem.title}</h3>\n                                <p>{selectedItem.content}</p>\n                                <p>작성일: {formatDate(selectedItem.createdAt)}</p> {/* 날짜 변환 적용 */}\n                            </>\n                        )}\n                        <button onClick={closePopup}>닫기</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default StoreDetail;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/Storedetail/index.js b/Frontend/src/pages/Storedetail/index.js
--- a/Frontend/src/pages/Storedetail/index.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/pages/Storedetail/index.js	(date 1739721005691)
@@ -3,30 +3,69 @@
 import HeaderContainer from "../../components/HeaderContainer/HeaderContainer";
 import StoreDetailbar from "../../components/StoreDetailBar";
 import StoreDetailApi from "../../api/StoreDetailApi";
+import CouponGetApi from "../../api/CouponGetApi";
+import CouponListApi from "../../api/CouponListApi";
+import useAuth from "../../hooks/useAuth";
+import axios from "axios";
+
 import "./style.css";
 
+
+
 const StoreDetail = () => {
     const [productData, setProductData] = useState(null); // API 데이터를 저장할 상태
     const [activeTab, setActiveTab] = useState("storeItems"); // 활성화된 탭 상태
     const [selectedItem, setSelectedItem] = useState(null); // 선택된 아이템 데이터
     const [selectedType, setSelectedType] = useState(""); // 선택된 아이템 타입
     const { storeNo } = useParams();
+    const nStoreNo = Number(storeNo)
+    const navigate = useNavigate();
+    const { logindata } = useAuth();
+    const apiUrl = process.env.REACT_APP_BACKEND_API_URL;
+
 
     const handleTabClick = (tab) => {
         setActiveTab(tab); // 활성화된 탭 업데이트
     };
 
-    const handleCouponGet = () => {
+
+    // 수정 필요
+    const checkLogin = () => {
+        if (!logindata) {
+            alert("로그인이 필요한 서비스입니다. 로그인 페이지로 이동합니다.");
+            axios.get(`${apiUrl}/api/users/login`, {})
+            return false;
+        }
+        return true;
+    };
+
+    // 2. 쿠폰 처리 함수
+    const handleCouponGet = async (nStoreNo) => {
+        if (!checkLogin()) return; // 로그인 체크
 
-    }
+        try {
+            const couponList = await CouponListApi(nStoreNo);
+            if (!couponList || couponList.length === 0) {
+                alert("사용 가능한 쿠폰이 없습니다");
+                return;
+            }
 
-    const navigate = useNavigate();
+            const couponId = couponList[0].couponId;
+            const receivedCoupon = await CouponGetApi(nStoreNo, couponId);
+            return receivedCoupon;
+        } catch (error) {
+            console.error("쿠폰 처리 실패:", error);
+        }
+    };
 
+// 3. 페이지 이동 함수들
     const navigateRequestPage = () => {
+        if (!checkLogin()) return; // 로그인 체크
         navigate(`/storedetail/${storeNo}/request`);
     };
 
     const navigateFlearequest = () => {
+        if (!checkLogin()) return; // 로그인 체크
         navigate(`/storeDetail/${storeNo}/flearequest`);
     };
 
@@ -51,7 +90,6 @@
         StoreDetailApi(storeNo, setProductData);
     }, []); // 빈 배열을 의존성으로 전달하여 한 번만 실행되도록 설정
 
-
     return (
         <div className="searchpagedom">
             <div className="storedetailheadercontainer"><HeaderContainer /></div>
@@ -75,7 +113,7 @@
                     <div className="market-name">{productData?.store.name}</div>
                     <div className="market-location">{productData?.store.address}</div>
                     <div className="storedetail-btnlist">
-                        <button className="couponrequestbtn">쿠폰<br/>수령</button>
+                        <button className="couponrequestbtn" onClick={() => handleCouponGet(nStoreNo)}>쿠폰<br/>수령</button>
                         <button className="requestbtn" onClick={navigateRequestPage}>입고<br/>요청</button>
                         <button className="flearequestbtn" onClick={navigateFlearequest}>플리<br/>신청</button>
                     </div>
@@ -179,6 +217,13 @@
                         {selectedType === "fli" && (
                             <>
                                 <h3>{selectedItem.fliItemName}</h3>
+                                <img
+                                    src={selectedItem.imagePath || '/logo.png'}
+                                    className="fliitemdetailimage"
+                                    onError={(e) => {
+                                        e.target.src = '/logo.png';
+                                    }}
+                                />
                                 <p>가격: {selectedItem.price}원</p>
                                 <p>수량: {selectedItem.quantity}</p>
                             </>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f896b346-e63a-4955-9c5d-cb4b97fbcc7e\" name=\"Changes\" comment=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/public/d.jpg\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/api/RequestApi.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/api/RequestApi.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/SearchDropdownList/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/SearchDropdownList/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/components/StoreDetailBar/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/components/StoreDetailBar/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/Storedetail/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/Storedetail/index.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/Storedetail/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/Storedetail/style.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/index.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/index.js\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/style.css\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"origin/Frontend\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPENED&quot;,\n    &quot;assignee&quot;: {\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\n      &quot;username&quot;: &quot;project_888884_bot_5460f612fc7da9ccd36545f9da4341e6&quot;,\n      &quot;fullname&quot;: &quot;sooho&quot;\n    }\n  }\n}</component>\n  <component name=\"GitLabMergeRequestsSettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;first&quot;: &quot;https://lab.ssafy.com/s12-webmobile1-sub1/S12P11A506.git&quot;,\n    &quot;second&quot;: &quot;e33ee6b4-1615-45ef-a98a-173e132f977f&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2sfU0UdfCWOTDN8Cw8GdwsNPGOD\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.git.unshallow\": \"true\",\n    \"git-widget-placeholder\": \"FE/FIX/#108\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/Users/mac/Downloads/SSAFY/SSAFY_season2/commonproject\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"ts.external.directory.path\": \"/Applications/WebStorm.app/Contents/plugins/javascript-plugin/jsLanguageServicesImpl/external\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Frontend/src/components/KioskCouponPopup\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/Frontend/src/pages/KioskMain\" />\n      <recent name=\"$PROJECT_DIR$/Frontend/src/pages\" />\n    </key>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-WS-243.23654.157\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f896b346-e63a-4955-9c5d-cb4b97fbcc7e\" name=\"Changes\" comment=\"\" />\n      <created>1738845899858</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1738845899858</updated>\n      <workItem from=\"1738845900970\" duration=\"3670000\" />\n      <workItem from=\"1738886022718\" duration=\"24462000\" />\n      <workItem from=\"1738913909041\" duration=\"306000\" />\n      <workItem from=\"1738914277977\" duration=\"35000\" />\n      <workItem from=\"1738914322054\" duration=\"4199000\" />\n      <workItem from=\"1739081872737\" duration=\"36070000\" />\n      <workItem from=\"1739152824324\" duration=\"47000\" />\n      <workItem from=\"1739152876382\" duration=\"26000\" />\n      <workItem from=\"1739152929279\" duration=\"24000\" />\n      <workItem from=\"1739153054176\" duration=\"42770000\" />\n      <workItem from=\"1739247929410\" duration=\"30265000\" />\n      <workItem from=\"1739291868462\" duration=\"14695000\" />\n      <workItem from=\"1739308289993\" duration=\"36322000\" />\n      <workItem from=\"1739350559470\" duration=\"19822000\" />\n      <workItem from=\"1739426375278\" duration=\"2000\" />\n      <workItem from=\"1739426451033\" duration=\"11909000\" />\n      <workItem from=\"1739452113566\" duration=\"11559000\" />\n      <workItem from=\"1739513711472\" duration=\"51988000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739427567928</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739427567928</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739428785456</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739428785456</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739432038269</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739432038269</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739432340013</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739432340013</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"[FE/FIX] 배포 테스트 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739433129149</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739433129149</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739435017686</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739435017686</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739466231792</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739466231792</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739610602839</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739610602839</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739670282959</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739670282959</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1739696098939</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1739696098939</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"11\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"[FE/FIX] 배포 테스트 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 지도 호출 흐름 수정 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 키오스크 ui 수정 (#68)\" />\n    <MESSAGE value=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/.idea/workspace.xml	(date 1739720885309)
@@ -6,16 +6,15 @@
   <component name="ChangeListManager">
     <list default="true" id="f896b346-e63a-4955-9c5d-cb4b97fbcc7e" name="Changes" comment="[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/public/d.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/App.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/api/CouponGetApi.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/api/CouponGetApi.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/api/CouponListApi.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/api/CouponListApi.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/api/RequestApi.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/api/RequestApi.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchBar/style.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/components/SearchDropdownList/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/SearchDropdownList/style.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/components/StoreDetailBar/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/components/StoreDetailBar/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/SearchResult/style.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/pages/Storedetail/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/Storedetail/index.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/Storedetail/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/Storedetail/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/StoredetailFlearequest/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/StoredetailFlearequest/index.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/index.js" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/Frontend/src/pages/StoredetailRequest/style.css" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -70,7 +69,7 @@
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "FE/FIX/#108",
+    "git-widget-placeholder": "FE/FIX/#113",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "/Users/mac/Downloads/SSAFY/SSAFY_season2/commonproject",
     "node.js.detected.package.eslint": "true",
@@ -123,7 +122,7 @@
       <workItem from="1739426375278" duration="2000" />
       <workItem from="1739426451033" duration="11909000" />
       <workItem from="1739452113566" duration="11559000" />
-      <workItem from="1739513711472" duration="51988000" />
+      <workItem from="1739513711472" duration="61711000" />
     </task>
     <task id="LOCAL-00001" summary="[FE/FIX] 배포 테스트 (#68)">
       <option name="closed" value="true" />
@@ -205,7 +204,15 @@
       <option name="project" value="LOCAL" />
       <updated>1739696098939</updated>
     </task>
-    <option name="localTasksCounter" value="11" />
+    <task id="LOCAL-00011" summary="[FE/FIX] 뒤로가기 시 지도 코드 꼬이는 현상 수정 (#68)">
+      <option name="closed" value="true" />
+      <created>1739708076864</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1739708076864</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: Frontend/src/api/CouponListApi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import apiClient from \"./apiClient\";\n\nconst CouponListApi = async (storeNo) => {\n    try {\n        const response = await apiClient.get(`/api/coupon/store/list?storeNo=${storeNo}`);\n\n        if (response.status === 200) {\n            return response.data;\n        }\n        throw new Error(response.message || \"데이터 요청 실패\");\n    } catch (error) {\n        console.error(\"API Error:\", error);\n        throw error;\n    }\n};\n\nexport default CouponListApi;\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/api/CouponListApi.js b/Frontend/src/api/CouponListApi.js
--- a/Frontend/src/api/CouponListApi.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/api/CouponListApi.js	(date 1739715555617)
@@ -1,13 +1,17 @@
 import apiClient from "./apiClient";
 
-const CouponListApi = async (storeNo) => {
+const CouponListApi = async (nStoreNo) => {
     try {
-        const response = await apiClient.get(`/api/coupon/store/list?storeNo=${storeNo}`);
+        const response = await apiClient.get(`/api/coupon/store/list`, {
+            params: {
+                storeNo: nStoreNo,
+            }
+        });
 
         if (response.status === 200) {
             return response.data;
         }
-        throw new Error(response.message || "데이터 요청 실패");
+        console.error(response.message || "데이터 요청 실패");
     } catch (error) {
         console.error("API Error:", error);
         throw error;
Index: Frontend/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Route, Routes, useLocation, useParams } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport Kiosk from \"./pages/Kiosk\"\nimport KioskMainScreen from \"./pages/KioskMain\";\nimport SignUp from \"./pages/SignUpPage/SignUp\";\nimport OwnerSignUp from \"./pages/SignUpPage/OwnerSignUp\";\nimport UserSignUp from \"./pages/SignUpPage/UserSignUp\";\nimport MyPage from \"./pages/MyPage\";\nimport Coupons from \"./pages/Coupons\";\nimport Chats from \"./pages/Chats\";\nimport KakaoRedirect from \"./pages/KakaoRedirect\";\nimport SearchPage from \"./pages/Search\";\nimport StoreDetail from \"./pages/Storedetail\"\nimport MakeCoupons from \"./pages/MakeCoupons\";\nimport Notice from \"./pages/Notice\";\nimport StockRequests from \"./pages/StockRequests\";\nimport FleaRequests from \"./pages/FleaRequests\";\nimport SearchbyNurtrition from \"./pages/SearchbyNurtrition\";\nimport SearchResult from \"./pages/SearchResult\";\nimport StoredetailRequestPopup from \"./pages/StoredetailRequest\";\nimport StoreDetailFlearequest from \"./pages/StoredetailFlearequest\";\nimport { KakaoMapProvider } from \"./contexts/ KakaoMapContext\";\n\n\nfunction App() {\n\n  const location = useLocation();\n  const params = useParams();\n\n  // 검색 결과[9] 참조: 동적 라우트 키 생성\n  const routeKey = location.pathname.startsWith('/search/results')\n      ? `search-${location.search}`\n      : location.pathname;\n\n  // 지도 페이지 판별 로직\n  const isMapPage = ['/', '/search/results'].includes(location.pathname);\n\n\n  // 뷰포트 높이 설정 (검색 결과[5] 참조)\n  useEffect(() => {\n    const setScreenSize = () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    };\n    setScreenSize();\n    window.addEventListener('resize', setScreenSize);\n    return () => window.removeEventListener('resize', setScreenSize);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n      <KakaoMapProvider>\n        <Routes>\n          <Route path=\"/signup\" element={<SignUp/>}/>\n          <Route path=\"/owner-signup\" element={<OwnerSignUp/>}/>\n          <Route path=\"/user-signup\" element={<UserSignUp/>}/>\n          <Route path=\"/mypage/user\" element={<MyPage/>}/>\n          <Route path=\"/mypage/user/coupons\" element={<Coupons/>}/>\n          <Route path=\"/mypage/user/chats\" element={<Chats/>}/>\n          <Route path=\"/mypage/admin\" element={<MyPage/>}/>\n          <Route path=\"/mypage/admin/flea\" element={<FleaRequests/>}/>\n          <Route path=\"/mypage/admin/stock\" element={<StockRequests/>}/>\n          <Route path=\"/mypage/admin/coupon\" element={<MakeCoupons/>}/>\n          <Route path=\"/mypage/admin/notice\" element={<Notice/>}/>\n\n          <Route path=\"/oauth/kakao\" element={<KakaoRedirect />} />\n\n          <Route path=\"/kiosk\" element={<Kiosk/>}/>\n          <Route path=\"/kiosk/main\" element={<KioskMainScreen/>}/>\n          {/*<Route path=\"/kiosk/:storeNo\" element={<KioskMainScreen/>}/>*/}\n\n          <Route path=\"/\" element={<MainPage />}/>\n          <Route path=\"/search/results\" element={<SearchResult key={location.key}/>}/>\n          <Route path=\"/search\" element={<SearchPage/>}/>\n          <Route path=\"/storedetail/:storeNo\" element={<StoreDetail/>}/>\n          <Route path=\"/storedetail/:storeNo/request\" element={<StoredetailRequestPopup/>}/>\n          <Route path=\"/storedetail/:storeNo/flearequest\" element={<StoreDetailFlearequest/>}/>\n          <Route path=\"/searchbynutrition\" element={<SearchbyNurtrition/>}/>\n        </Routes>\n      </KakaoMapProvider>\n        </div>\n      <div\n          id=\"map-root\"\n          className={`map-container ${isMapPage ? 'visible' : 'hidden'}`}\n          style={{\n            opacity: isMapPage ? 1 : 0,\n            visibility: isMapPage ? 'visible' : 'hidden',\n            transition: 'opacity 0.3s ease, visibility 0.3s ease'\n          }}\n      ></div>\n\n    </div>\n  );\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/App.js b/Frontend/src/App.js
--- a/Frontend/src/App.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/App.js	(date 1739718997591)
@@ -29,7 +29,6 @@
   const location = useLocation();
   const params = useParams();
 
-  // 검색 결과[9] 참조: 동적 라우트 키 생성
   const routeKey = location.pathname.startsWith('/search/results')
       ? `search-${location.search}`
       : location.pathname;
Index: Frontend/src/pages/SearchResult/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { useState, useMemo } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport HeaderContainer from \"../../components/HeaderContainer/HeaderContainer\";\nimport DraggableBottomSheet from \"../../components/DraggableBottomSheet/DraggableBottomSheet\";\nimport KakaoMapMarkers from \"../../components/KakaoMapMarkers\";\nimport KakaoMapContainer from \"../../components/KakaoMapContainer\";\nimport { useBaseMap } from \"../../contexts/ KakaoMapContext\";\nimport './style.css'\n\nconst SearchResult = () => {\n    const { isSDKLoaded } = useBaseMap()\n    const [storelist, setStorelist] = useState([]);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n\n    // 좌표 객체 메모이제이션\n    const coords = useMemo(() => ({\n        lat: queryParams.get('lat'),\n        lng: queryParams.get('lng')\n    }), [queryParams.get('lat'), queryParams.get('lng')]);\n\n    const itemId = queryParams.get('itemId');\n    const itemName = queryParams.get('itemName');\n\n    return (\n        <div className=\"result-page\">\n            <div className=\"resultpagecontents\">\n                <div className=\"resultheader\"><HeaderContainer/></div>\n                <div className=\"resultsearchbar\">\n                    <p className=\"resultsearchinput\">{itemName}</p>\n                </div>\n                <DraggableBottomSheet\n                    coords={coords}\n                    setStorelist={setStorelist}\n                    itemId={itemId}\n                />\n            </div>\n            {isSDKLoaded && (\n                <>\n                    <KakaoMapContainer coords={coords} />\n                    <KakaoMapMarkers storelist={storelist} />\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default SearchResult;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchResult/index.js b/Frontend/src/pages/SearchResult/index.js
--- a/Frontend/src/pages/SearchResult/index.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/pages/SearchResult/index.js	(date 1739719624608)
@@ -29,6 +29,7 @@
                 <div className="resultheader"><HeaderContainer/></div>
                 <div className="resultsearchbar">
                     <p className="resultsearchinput">{itemName}</p>
+                    <button className="resultbackbutton" onClick={() => navigate(-1)}>뒤로가기</button>
                 </div>
                 <DraggableBottomSheet
                     coords={coords}
Index: Frontend/src/api/CouponGetApi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import apiClient from \"./apiClient\";\n\nconst CouponGetApi = async (storeNo, couponId) => {\n    try {\n        const response = await apiClient.get(`/api/coupon/receive`, {\n            storeNo: storeNo,\n            couponId: couponId,\n        });\n\n        if (response.status === 200) {\n            return response.data;\n        }\n        throw new Error(response.message || \"데이터 요청 실패\");\n    } catch (error) {\n        console.error(\"API Error:\", error);\n        throw error;\n    }\n};\n\nexport default CouponGetApi;\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/api/CouponGetApi.js b/Frontend/src/api/CouponGetApi.js
--- a/Frontend/src/api/CouponGetApi.js	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/api/CouponGetApi.js	(date 1739715874194)
@@ -1,16 +1,16 @@
 import apiClient from "./apiClient";
 
-const CouponGetApi = async (storeNo, couponId) => {
+const CouponGetApi = async (nStoreNo, couponId) => {
     try {
-        const response = await apiClient.get(`/api/coupon/receive`, {
-            storeNo: storeNo,
+        const response = await apiClient.post(`/api/coupon/receive`, {
+            storeNo: nStoreNo,
             couponId: couponId,
         });
 
         if (response.status === 200) {
             return response.data;
         }
-        throw new Error(response.message || "데이터 요청 실패");
+        console.error(response.message || "데이터 요청 실패");
     } catch (error) {
         console.error("API Error:", error);
         throw error;
Index: Frontend/src/pages/SearchResult/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.result-page {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 100;\n    top: 0;\n}\n\n.resultpagecontents {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n    grid-template-rows: 8vh 6vh auto;\n    position: relative;\n    z-index: 100;\n}\n\n.resultheader {\n    grid-row: 1;\n    width: 100%;\n}\n\n.resultsearchbar {\n    box-sizing: border-box;\n    border: 2px solid #3f72af;\n    grid-row: 2;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n\n.resultsearchinput {\n    box-sizing: inherit;\n    width: 100%;\n    height: 100%;\n    background-color: white;\n    text-align: left;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    align-content: center;\n    padding-left: 10px;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Frontend/src/pages/SearchResult/style.css b/Frontend/src/pages/SearchResult/style.css
--- a/Frontend/src/pages/SearchResult/style.css	(revision 493ca2afb2d485dd26a16e894d5aba3b804cd42d)
+++ b/Frontend/src/pages/SearchResult/style.css	(date 1739719624605)
@@ -35,7 +35,7 @@
 
 .resultsearchinput {
     box-sizing: inherit;
-    width: 100%;
+    width: 75%;
     height: 100%;
     background-color: white;
     text-align: left;
@@ -44,3 +44,9 @@
     align-content: center;
     padding-left: 10px;
 }
+
+.resultbackbutton {
+    box-sizing: inherit;
+    width: 25%;
+    height: 100%;
+}
\ No newline at end of file
